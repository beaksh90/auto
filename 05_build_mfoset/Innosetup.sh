## Written by EXEM Co., Ltd. DEVQA BSH
## Last modified 2017.01.11
## Default source Directory
## 경로를 표시 할 때 윈도우(\) , 리눅스(/) 간 차이가 있음. 
## There are difference of expression of dilimeter between Win(\) and Linux(/)
## 2016.11.11 부터 DATABASE_HOME을 변경하였다 (C:/Multi-Runner/mfodg/Database -> "C:/Database")
DATABASE_HOME="C:/Database"
DGSERVER_M_HOME="C:/Multi-Runner/mfodg/deploy/MFO/tar/DGServer_M"
DGSERVER_S1_HOME="C:/Multi-Runner/mfodg/deploy/MFO/tar/DGServer_S1"
PLATFORMJS_HOME="C:/Multi-Runner/mfonp/deploy/MFO/PlatformJS"
XMPING_HOME="C:/Multi-Runner/mfodg/deploy/MFO/tar/XmPing"
PGBACKUP_HOME="C:/Multi-Runner/mfodg/deploy/MFO/tar/PG_Backup"

INNOSETUP_LANG_HOME="C:\Multi-Runner\mfobuild\05_build_mfoset\innosetup-lang"
LICENSEFILE="C:\Multi-Runner\mfobuild\05_build_mfoset\innosetup-lang\license-en.rtf"
LICENSEFILE_JP="C:\Multi-Runner\mfobuild\05_build_mfoset\license-jp.rtf"
MAXGAUGE_ICO="C:\Multi-Runner\mfobuild\05_build_mfoset\maxgauge.ico"
ENCRYPT32="C:\Multi-Runner\mfobuild\05_build_mfoset\excrypt32.dll"
ENCRYPT64="C:\Multi-Runner\mfobuild\05_build_mfoset\excrypt64.dll"
OUTPUTDIR="C:\Multi-Runner\package"

ISS_FILE_DIR="C:/Multi-Runner/package/MFO_ISS_SCRIPT.ISS"
ISS_FILE_DIR2="C:/Multi-Runner/package/MFO_ISS_SCRIPT2.ISS"

TOTAL_PACKAGE="$DGSERVER_M_HOME $DGSERVER_S1_HOME $PLATFORMJS_HOME $XMPING_HOME $PGBACKUP_HOME $DATABASE_HOME"
MFO_ORA_PACAKAGE="$PLATFORMJS_HOME"
MFO_PG_PACAKAGE="$PLATFORMJS_HOME"

REQUIRER_CHECK()
{
echo "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF;" > insert_tag.sql
echo "select WHO, PART, REQ_TAG from requirer;" >> insert_tag.sql
REQUIRER_INFO=`echo exit | sqlplus -silent git/git@DEVQA23 @insert_tag.sql`
sleep 1
rm insert_tag.sql

USING_USER=`echo $REQUIRER_INFO | awk '{print $1}'`
FOR_WHAT=`echo $REQUIRER_INFO | awk '{print $2}'`
## 여기서는 REQ_TAG 변수만 사용함
## Only Var 'REQ_TAG' is used in this shell.
REQ_TAG=`echo $REQUIRER_INFO | awk '{print $3}'`
}

ISS_FILE_MAKER()
{
#ISS 오리지널 그대로 만들고자 이런 로직이 만들어지게 되었음.
## 16.11.11 FUNC 'ISS_FILE_TOP_PART' , 
##               'ISS_FILE_CODE_PART_MFO_TOTAL'
##               'ISS_FILE_CODE_PART_ONLY_PJS' has changed.
#TOTAL PACKAGE
	CP_MAXGAUGE_ICO
	ISS_FILE_TOP_PART
	for CURR_DIR in $TOTAL_PACKAGE
	do
		FILE_DIR_ATTACH_ROUTINE
	done
	ISS_FILE_CODE_PART_MFO_TOTAL
	MAKE_UP_FOR_NEXT_SETUP
#ONLY PJS WITHOUT DG&REPO
case $REQ_TAG in
	total)
	CP_ENCRYPT
	MINOR_FILE_NAME="_ONLY_PJS"
	ISS_FILE_TOP_PART
	for CURR_DIR in $MFO_ORA_PACAKAGE
	do
		FILE_DIR_ATTACH_ROUTINE
	done
	ISS_FILE_CODE_PART_ONLY_PJS
	MAKE_UP_FOR_NEXT_SETUP
	;;
esac
## NEW JAVA PJS 이전의 패키지
#REPO_ORACLE_PACKAGE
	# MINOR_FILE_NAME="_Oracle"
	# ISS_FILE_TOP_PART
	# for CURR_DIR in $MFO_ORA_PACAKAGE
	# do
		# FILE_DIR_ATTACH_ROUTINE
	# done
	# ISS_FILE_CODE_PART_MFO_ORACLE
	# MAKE_UP_FOR_NEXT_SETUP
#REPO_PG_PACKAGE
	# MINOR_FILE_NAME="_postgresql"
	# ISS_FILE_TOP_PART
	# for CURR_DIR in $MFO_PG_PACAKAGE
	# do
		# FILE_DIR_ATTACH_ROUTINE
	# done
	# ISS_FILE_CODE_PART_MFO_PG
	# MAKE_UP_FOR_NEXT_SETUP
}

FILE_DIR_ATTACH_ROUTINE()
{
	DIR_ATTACHMENT="NAME: {app}\\"
	FILES_ATTACHMENT1="Source: "
	FILES_ATTACHMENT2="; DestDir: {app}\\"
	#IFS는 필드 구분자이며 엔터를 기준으로 나눔 for 문에서 필요함.
	#VARAIBLE, IFS, means delimeter and each sentence is splited by enter '
	IFS=$'
	'
	cd $CURR_DIR
		BASENAME_DIR=`basename $CURR_DIR`
	echo " ATTACHING ISS SCRIPT LINES for $BASENAME_DIR"

	for DIRS in `find -type d | awk '{gsub(/\.\//,"/"); print}'`
		do
		if [ "$DIRS" = "." ]; then DIRS=""; fi
		DIRS="$DIR_ATTACHMENT$BASENAME_DIR$DIRS"
		echo -e "$DIRS" | awk '{gsub(/\//,"\\"); print}' >> $ISS_FILE_DIR
	done
	
	## TUNINIG SUCCESS AS OF 2017.02.22 
	## TOTAL BUILD TIME 25' -> 10'
	# for FILES in `find -type f | awk '{gsub(/\.\//,""); print}'`
		# do 
		# FILES_DIR=`dirname $FILES | awk '{gsub(/\.\//,"/"); print}'`
		# if [ "$FILES_DIR" = "." ]; then FILES_DIR=""; fi
		# FILES="$FILES_ATTACHMENT1$CURR_DIR\\$FILES$FILES_ATTACHMENT2$BASENAME_DIR\\$FILES_DIR"
		# echo "$FILES"| awk '{gsub(/\//,"\\"); print}' >> $ISS_FILE_DIR2
	# done
	IFS=$' '
}

MAKE_UP_FOR_NEXT_SETUP()
{
	## TUNINIG SUCCESS AS OF 2017.02.22, 'ISS_FILE_DIR2' is useless
	## TOTAL BUILD TIME 25' -> 10'
	# cat $ISS_FILE_DIR2 >> $ISS_FILE_DIR
	# rm $ISS_FILE_DIR2
	## Q option means silent mode , P option means show progress
	ISCC /qp $ISS_FILE_DIR
	rm $ISS_FILE_DIR
}

CP_MAXGAUGE_ICO ()
{
cp -v $MAXGAUGE_ICO ${PLATFORMJS_HOME}/bin/maxgauge.ico
}

CP_ENCRYPT ()
{
cp -v $ENCRYPT32 ${PLATFORMJS_HOME}/app/excrypt32.dll
cp -v $ENCRYPT64 ${PLATFORMJS_HOME}/app/excrypt64.dll
}

ISS_FILE_TOP_PART_160520()
{
echo "
; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define AppName \"MaxGauge\"
#define AppVerName \"MaxGauge Web\"
#define AppPublisher \"ExEm Company, Inc.\"
#define AppURL \"http://www.ex-em.com\"
#define AppExeName \"PlatformJS64.exe\"
#define SetupDate GetDateTimeString('yymmdd_hhnnss', '', '')

[Setup]

AppName={#AppName}
AppVerName={#AppVerName}
AppPublisher={#AppPublisher}
AppPublisherURL={#AppURL}
AppSupportURL={#AppURL}
AppUpdatesURL={#AppURL}
DefaultDirName={sd}\EXEM
DefaultGroupName=MaxGauge Web
LicenseFile=$LICENSEFILE
;LicenseFile=\\192.168.123.101\Setup\MAXGAUGE_WEB_RELEASE\PlatformJS\bin\license.rtf
OutputBaseFilename=MaxGauge_{#SetupDate}$MINOR_FILE_NAME
UninstallDisplayIcon={app}\PlatformJS32.exe
OutputDir=$OUTPUTDIR
ShowLanguageDialog=auto
ShowUndisplayableLanguages=false
Compression=lzma
SolidCompression=yes

;DefaultDirName={pf}\{#MyAppName}
;DefaultGroupName={#MyAppName}


[Languages]
Name: English; MessagesFile: $INNOSETUP_LANG_HOME\Default.isl; LicenseFile: $INNOSETUP_LANG_HOME\license-en.rtf
Name: Korean; MessagesFile: $INNOSETUP_LANG_HOME\Korean.isl; LicenseFile: $INNOSETUP_LANG_HOME\license-en.rtf
Name: Japanese; MessagesFile: $INNOSETUP_LANG_HOME\Japanese.isl; LicenseFile: $INNOSETUP_LANG_HOME\license-en.rtf
Name: ChineseTraditional; MessagesFile: $INNOSETUP_LANG_HOME\ChineseTraditional.isl; LicenseFile: $INNOSETUP_LANG_HOME\license-jp.rtf
Name: ChineseSimplified; MessagesFile: $INNOSETUP_LANG_HOME\ChineseSimplified.isl; LicenseFile: $INNOSETUP_LANG_HOME\license-en.rtf
Name: Thai; MessagesFile: $INNOSETUP_LANG_HOME\Thai.isl; LicenseFile: $INNOSETUP_LANG_HOME\license-en.rtf
Name: Indonesian; MessagesFile: $INNOSETUP_LANG_HOME\Indonesian.isl; LicenseFile: $INNOSETUP_LANG_HOME\license-en.rtf
Name: Vietnamese; MessagesFile: $INNOSETUP_LANG_HOME\Vietnamese.isl; LicenseFile: $INNOSETUP_LANG_HOME\license-en.rtf

[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}

[Dirs]
;Name: {app}\MAXGAUGE\Database
;Name: {app}\MAXGAUGE\PlatformJS
;Name: {app}\MAXGAUGE\DataGather
;Name: {app}\conf
;Name: \"{app}\sql\MFOPG\"
;Name: {app}\sql\MSSQL
;Name: {app}\sql\Oracle
;Name: {app}\sql\PostgreSQL
;Name: {app}\bin\jdk17
;Name: {app}\bin\network\admin

;[CustomMessages]
;selectInstall64 = \"Select if you installed 64-bit Oracle client. %n (※ Don't select if you installed 32-bit)\";
;launchMsg       = \"Launch Maxgauge Configuration\" ;" >> $ISS_FILE_DIR
}

ISS_FILE_CODE_PART_MFO_TOTAL_160520()
{
echo "

[Icons]
Name: {group}\PlatformJS Start; Filename: {app}\PlatformJS\bin\sc_start.bat; Comment: web service start; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Start; Filename: {app}\PlatformJS\bin\sc_start.bat; WorkingDir: {app}\PlatformJS\bin; Comment: web service start; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {group}\PlatformJS Stop; Filename: {app}\PlatformJS\bin\sc_stop.bat; Comment: web service stop; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Stop; Filename: {app}\PlatformJS\bin\sc_stop.bat; WorkingDir: {app}\PlatformJS\bin\; Comment: web service stop; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {group}\PlatformJS Restart; Filename: {app}\PlatformJS\bin\sc_restart.bat; Comment: web service restart; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Restart; Filename: {app}\PlatformJS\bin\sc_restart.bat; WorkingDir: {app}\PlatformJS\bin\; Comment: web service restart; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon


[Run]
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MAXGAUGE.zip -d {app}; StatusMsg: During decompression... ; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\DataGather.zip -d {app}\DataGather; StatusMsg: During decompression datagather...; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\Database.zip -d {app}\Database; StatusMsg: During decompression Database...; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\PlatformJS.zip -d {app}\PlatformJS; StatusMsg: During decompression PlatformJS...; Flags : runhidden
;Filename: {app}\All_Start.bat; WorkingDir: {app}; StatusMsg: Register service; Flags: runhidden; Tasks:
;Filename: {app}\DGServer_M\bin\DGServer_x86_64.exe; Parameters: /install; WorkingDir: {app}\DGServer_M\bin; StatusMsg: Registration of datagather Master...; Flags: runhidden
;Filename: net; Check: procWaiting( 'Starting service datagather Master', 'start DGServer Master' ); Flags: runhidden
;Filename: {app}\DGServer_S1\bin\DGServer_x86_64.exe; Parameters: /install; WorkingDir: {app}\DGServer_S1\bin; StatusMsg: Registration of datagather Slave...; Flags: runhidden
;Filename: net; Check: procWaiting( 'Starting service datagather Slave', 'start DGServer Slave' ); Flags: runhidden
;Filename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Parameters: '-install'; Description: Launch Platform. JS 64bit; Flags: nowait postinstall skipifsilent unchecked; WorkingDir: {app}\PlatformJS\bin
;Filename: {app}\PlatformJS\bin\PlatformJS_Service32.exe; Parameters: '-install'; Description: Launch Platform. JS 32bit; Flags: nowait postinstall skipifsilent unchecked; WorkingDir: {app}\PlatformJS\bin; Tasks:
;Filename: net; Parameters: {code:GetParams32|{app}}; Description: Run PlatformJS 32bit If the 32bit Oracle; Flags: runhidden nowait postinstall skipifsilent unchecked; WorkingDir: {app}\PlatformJS\bin; Tasks:
;Filename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Parameters: -install; Description: Launch Platform. JS 64bit; Flags: nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin; Check: IsWin64; Tasks:
;Filename: {app}\PlatformJS\bin\PlatformJS_Service32.exe; Parameters: -install; Description: Launch Platform. JS 32bit; Flags: nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin; Check: not IsWin64
;Filename: C:\Program Files (x86)\Google\Chrome\Application\chrome.exe; Parameters: http://127.0.0.1:8080/Maxgauge/Config; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent

;Filename: net; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent



;Filename: {sys}\sc.exe; Parameters: create DGServer_M  start= auto    binPath= {app}\DGServer_M\bin\DGServer_x86_64_M.exe; Flags: runhidden
;Filename: {sys}\sc.exe; Parameters: create DGServer_S1 start= auto    binPath= {app}\DGServer_S1\bin\DGServer_x86_64_S1.exe; Flags: runhidden
;Filename: {sys}\sc.exe; Parameters: \"create DGServer_OBS_M start= auto binPath= \"\"{app}\DGServer_M\bin\mxg_obsd.exe -f  {app}\DGServer_M\conf\DG\common.conf -i 10 -D -OTHERD\"\"\"; Flags: runhidden
;Filename: {sys}\sc.exe; Parameters: \"create DGServer_OBS_S1 start= demand  binPath= \"\"{app}\DGServer_S1\bin\mxg_obsd.exe -f {app}\DGServer_S1\conf\DG\common.conf -i 10 -D -OTHERD\"\"\"; Flags: runhidden


Filename: {app}\Database\bin\pg_ctl.exe; Parameters: register -N PostgreSQL -D {app}\Database\data; WorkingDir: {app}; StatusMsg: {cm:registrationPG}; Flags: runhidden
Filename: net; Check: procWaiting( ExpandConstant('{cm:startServicePG}') , 'start PostgreSQL' ); Flags: runhidden

Filename: net; Description: {cm:selectInstall64}; Flags: runhidden nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin
Filename: net; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent

;Filename: C:\Program Files (x86)\Google\Chrome\Application\chrome.exe; Parameters: http://127.0.0.1:8080/Maxgauge/Config; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent

[UninstallRun]
Filename: {sys}\sc.exe; Parameters: stop PostgreSQL; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PostgreSQL; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop DGServer_S1; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete DGServer_S1; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop DGServer_OBS_M; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete DGServer_OBS_M; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop DGServer_M; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete DGServer_M; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop DGServer_OBS_S1; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete DGServer_OBS_S1; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop PlatformJS_OBS; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PlatformJS_OBS; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop PlatformJS8080; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PlatformJS8080; WorkingDir: {app}; Flags: runhidden

[UninstallDelete]
Type: filesandordirs; Name: {app}


[Code]


var
  lblMasterGather: TLabel;
  edtMasterGather: TEdit;
  lblSlaveGather : TLabel;
  edtSlaveGather : TEdit;
  lblGB1         : TLabel;
  lblGB2         : TLabel;
  Panel1         : TPanel;

function NextButtonClick(CurPageID: Integer): Boolean;
var
  ErrorCode: Integer;
  path : string;
begin
  // always allow move through the wizard pages
  Result := True;

  if (CurPageID = wpFinished) and (WizardForm.RunList.Visible) then
  begin
    if WizardForm.RunList.Checked[0] then
	begin
		Exec(ExpandConstant('{app}\PlatformJS\bin\PlatformJS_Service64.exe'), '-install', '', SW_SHOW, ewNoWait, ErrorCode );
	end
	else
	begin
		Exec(ExpandConstant('{app}\PlatformJS\bin\PlatformJS_Service32.exe'), '-install', '', SW_SHOW, ewNoWait, ErrorCode );
	end;
	//msgbox( 'start platformJS8080', mbInformation, MB_OK);
	sleep(1000);
	ShellExec('', 'net', 'start platformJS8080', '', SW_HIDE, ewNoWait, ErrorCode );

	if WizardForm.RunList.Checked[1] then
	begin
		sleep(1000);
	    ShellExec('open', 'chrome.exe', 'http://127.0.0.1:8080/Maxgauge/Config', '', SW_HIDE, ewNoWait, ErrorCode );
	end
  end;

end;


procedure CurStepChanged(CurStep: TSetupStep);
var
	ErrorCode: Integer;
	optionDGMStr : string;
	optionDGSStr : string;

	optionOBMStr : string;
	optionOBSStr : string;


    filePathDGM    : string;
    ChangePathDGM  : string;
    filePathDGS    : string;
    ChangePathDGS  : string;

    filePathOBM    : string;
    ChangePathOBM  : string;
    filePathOBS    : string;
    ChangePathOBS : string;

begin


    if (CurStep=ssPostInstall) then
    begin
	    filePathDGM   := ExpandConstant('{app}\DGServer_M');
		ChangePathDGM := filePathDGM;
        StringChange(ChangePathDGM,'\','\\\\');

        filePathDGS   := ExpandConstant('{app}\DGServer_S1');
		ChangePathDGS := filePathDGS;
        StringChange(ChangePathDGS,'\','\\\\');

        filePathOBM   := ExpandConstant('{app}\DGServer_M');
		ChangePathOBM := filePathDGM;
        StringChange(ChangePathOBM,'\','\\\\');

        filePathOBS   := ExpandConstant('{app}\DGServer_S1');
		ChangePathOBS := filePathOBS;
        StringChange(ChangePathOBS,'\','\\\\');

        //MasterDGMemroy := Trunc(FloatToStr(strTofloat(edtMasterGather.Text) * 1024)) + 'm';

        optionDGMStr :=
			'option -Xms'+FloatToStr(strTofloat(edtMasterGather.Text) * 1024)+'m'+#13#10 +
			'option -Xmx'+FloatToStr(strTofloat(edtMasterGather.Text) * 1024)+'m'+#13#10 +
			'option -XX:+UseParNewGC'+ #13#10 +
			'option -XX:+UseConcMarkSweepGC'+ #13#10+
			'option -XX:CMSInitiatingOccupancyFraction=45'+ #13#10;

		optionDGSStr :=
			'option -Xms'+FloatToStr(strTofloat(edtSlaveGather.Text) * 1024)+'m'+ #13#10 +
			'option -Xmx'+FloatToStr(strTofloat(edtSlaveGather.Text) * 1024)+'m'+ #13#10 +
			'option -XX:+UseParNewGC'+ #13#10+
			'option -XX:+UseConcMarkSweepGC'+ #13#10+
			'option -XX:CMSInitiatingOccupancyFraction=45'+ #13#10;

		optionOBMStr :=
			'obs1=1'+ #13#10 +
			'obs1_cmd=DGServer_M'+ #13#10 +
			'obs1_keyword=DGServer_M_x86_64'+#13#10 +
			'obs1_keyword2=DGServer_M_x86_64'+#13#10 +
			'obs1_cpu_limit=80'+ #13#10 +
			'obs1_mem_limit='+FloatToStr((strTofloat(edtMasterGather.Text)+1) * 1024 *1024)+ #13#10 +
			'obs1_init_wait=180'+ #13#10 +
			'obs1_activity_time=300'+ #13#10 +
			'obs1_activity_file=dg.act';

		optionOBSStr :=
			'obs1=1'+ #13#10 +
			'obs1_cmd=DGServer_S1'+ #13#10 +
			'obs1_keyword=DGServer_S1_x86_64'+#13#10 +
			'obs1_keyword2=DGServer_S1_x86_64'+#13#10 +
			'obs1_cpu_limit=80'+ #13#10 +
			'obs1_mem_limit='+FloatToStr((strTofloat(edtSlaveGather.Text)+1) * 1024 *1024)+ #13#10 +
			'obs1_init_wait=180'+ #13#10 +
			'obs1_activity_time=300'+ #13#10 +
			'obs1_activity_file=dg.act';

		SaveStringToFile(filePathDGM + '\bin\DGServer_M_x86_64.config', optionDGMStr, False);
        SaveStringToFile(filePathDGM + '\bin\DGServer_M_x86.config', optionDGMStr, False);
        SaveStringToFile(filePathDGS + '\bin\DGServer_S1_x86_64.config', optionDGSStr, False);
	    SaveStringToFile(filePathDGS + '\bin\DGServer_S1_x86.config', optionDGSStr, False);
	    SaveStringToFile(filePathOBM + '\conf\DG\common.conf', optionOBMStr, False);
	    SaveStringToFile(filePathOBS + '\conf\DG\common.conf', optionOBSStr, False);

	    sleep(500);
		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"DGServer_M\"  start= auto   binPath= \"{app}\DGServer_M\bin\DGServer_M_x86_64.exe\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
		sleep(500);
		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"DGServer_S1\" start= auto   binPath= \"{app}\DGServer_S1\bin\DGServer_S1_x86_64.exe\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
		sleep(500);
		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"DGServer_OBS_M\" start= auto binPath= \"{app}\DGServer_M\bin\mxg_obsd.exe -f  {app}\DGServer_M\conf\DG\common.conf -i 10 -D -OTHERD\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
		sleep(500);
		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"DGServer_OBS_S1\" start= auto  binPath= \"{app}\DGServer_S1\bin\mxg_obsd.exe -f {app}\DGServer_S1\conf\DG\common.conf -i 10 -D -OTHERD\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
		sleep(500);
		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"PlatformJS_OBS\" start= auto  binPath= \"{app}\PlatformJS\bin\mxg_obsd.exe -f {app}\PlatformJS\conf\common.conf -i  10 -D -OTHERD\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );


    end;


	if (CurStep=ssDone) then
	begin
	    sleep(500);
		ShellExec('', 'net', 'start DGServer_OBS_M', '', SW_HIDE, ewNoWait, ErrorCode );
		sleep(500);
		ShellExec('', 'net', 'start DGServer_OBS_S1', '', SW_HIDE, ewNoWait, ErrorCode );
		sleep(500);
		ShellExec('', 'net', 'start DGServer_M', '', SW_HIDE, ewNoWait, ErrorCode );
		sleep(500);
		ShellExec('', 'net', 'start DGServer_S1', '', SW_HIDE, ewNoWait, ErrorCode );

		sleep(500);
		ShellExec('', 'net', 'start PlatformJS_OBS', '', SW_HIDE, ewNoWait, ErrorCode );

	end;
end;


function procWaiting( title : string; command : string ) : boolean;
var
  ix : integer;
  resultCode : integer;
begin
  result := true;
  WizardForm.StatusLabel.Caption := title;

  Exec( 'net', command, '', SW_HIDE, ewNoWait, resultCode );

  for ix := 1 to 20 do
  begin
    if ( ix mod 6 ) = 0 then
      WizardForm.StatusLabel.Caption := title;

    WizardForm.StatusLabel.Caption := WizardForm.StatusLabel.Caption + '.'
    sleep(150);
  end;
end;

procedure SampleForm_Activate(Page: TWizardPage);
begin
  // enter code here...
end;


function SampleForm_ShouldSkipPage(Page: TWizardPage): Boolean;
begin
  Result := False;
end;


function SampleForm_BackButtonClick(Page: TWizardPage): Boolean;
begin
  Result := True;
end;


procedure SampleForm_CancelButtonClick(Page: TWizardPage; var Cancel, Confirm: Boolean);
begin
  // enter code here...
end;

function SampleForm_NextButtonClick(Page: TWizardPage): Boolean;
begin
    try
		StrToFloat(edtMasterGather.Text);
    except
		msgbox( ExpandConstant('{cm:InputNumberErrMsg}'), mbInformation, MB_OK);
		edtMasterGather.clear();
		edtMasterGather.Focused();
		result := false;
		exit;
    end;


   try
		StrToFloat(edtSlaveGather.Text);
   except
		msgbox( ExpandConstant('{cm:InputNumberErrMsg}'), mbInformation, MB_OK);
		edtSlaveGather.clear();
		edtSlaveGather.Focused();
		result := false;
		exit;
   end;
   result := true;
end;

//function SampleForm_NextButtonClick(Page: TWizardPage): Boolean;
//begin
  // result := true;
//end;

//procedure onkeyDown(Sender: TObject; var Key: Char) ;
//begin

  //msgbox( Key, mbInformation, MB_OK);
	//#8,#9,#32,#3,#22,
  //if (Key in ['0'..'9'] ) then
  //begin

  //end ;

//end;




function DatabaseInfoForm_CreatePage(PreviousPageId: Integer): Integer;
var
  Page: TWizardPage;
begin
  Page := CreateCustomPage(
    PreviousPageId,
    ExpandConstant('{cm:DatabaseInfoForm_Caption}'),
    'Input Gather memory Information'
  );

  { Panel1 }
  Panel1 := TPanel.Create(Page);
  with Panel1 do
  begin
    Parent      := Page.Surface;
    Left        := ScaleX(8);
    Top         := ScaleY(2);
    Width       := ScaleX(393);
    Height 	    := ScaleY(233);
    BevelInner  := bvNone;
    BevelWidth  := ScaleX(1);
    BorderStyle := bsSingle;
    TabOrder    := 0;
  end;

{ Label1 }
  lblMasterGather := TLabel.Create(Page);
  with lblMasterGather do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(10);
    Width   := ScaleX(92);
    Height  := ScaleY(13);

    Caption := 'Master Gather';
  end;

  edtMasterGather := TEdit.Create(Page);
  with edtMasterGather do
  begin
    Parent := Panel1;
    Left   := ScaleX(95);
    Top    := ScaleY(8);
    Width  := ScaleX(100);
    Height := ScaleY(13);
    Text    := '1';
  end;

  lblGB1 := TLabel.Create(Page);
  with lblGB1 do
  begin
    Parent  := Panel1;
    Left    := ScaleX(200);
    Top    := ScaleY(11);
    Width   := ScaleX(50);
    Height  := ScaleY(13);
    Caption := 'GB';
  end;

  lblSlaveGather := TLabel.Create(Page);
  with lblSlaveGather do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(30) + edtMasterGather.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := 'Slave Gather';
  end;

  edtSlaveGather := TEdit.Create(Page);
  with edtSlaveGather do
  begin
    Parent := Panel1;
    Left   := ScaleX(95);
    Top    := ScaleY(39);
    Width  := ScaleX(100);
    Height := ScaleY(13);
    Text   := '3';
  end;

  lblGB2 := TLabel.Create(Page);
  with lblGB2 do
  begin
    Parent  := Panel1;
    Left    := ScaleX(200);
    Top    := ScaleY(42);
    Width   := ScaleX(50);
    Height  := ScaleY(13);
    Caption := 'GB';
  end;



  with Page do
  begin
    OnActivate := @SampleForm_Activate;
    OnShouldSkipPage := @SampleForm_ShouldSkipPage;
    OnBackButtonClick := @SampleForm_BackButtonClick;
    OnNextButtonClick := @SampleForm_NextButtonClick;
    OnCancelButtonClick := @SampleForm_CancelButtonClick;
  end;


  Result := Page.ID;
end;



procedure InitializeWizard();
begin
  // Common
  DatabaseInfoForm_CreatePage(wpSelectTasks);
end;
[Files]" >> $ISS_FILE_DIR
}

ISS_FILE_CODE_PART_MFO_ORACLE_160520()
{
echo "


[Icons]
Name: {group}\PlatformJS Start; Filename: {app}\PlatformJS\bin\sc_start.bat; Comment: web service start; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Start; Filename: {app}\PlatformJS\bin\sc_start.bat; WorkingDir: {app}\PlatformJS\bin; Comment: web service start; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {group}\PlatformJS Stop; Filename: {app}\PlatformJS\bin\sc_stop.bat; Comment: web service stop; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Stop; Filename: {app}\PlatformJS\bin\sc_stop.bat; WorkingDir: {app}\PlatformJS\bin\; Comment: web service stop; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {group}\PlatformJS Restart; Filename: {app}\PlatformJS\bin\sc_restart.bat; Comment: web service restart; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Restart; Filename: {app}\PlatformJS\bin\sc_restart.bat; WorkingDir: {app}\PlatformJS\bin\; Comment: web service restart; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon

[Run]
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MAXGAUGE.zip -d {app}\web\MAXGAUGE\; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\Intermax.zip -d {app}\web\Intermax\; Flags : runhidden
;Filename: \"{tmp}\UNZIP.EXE\"; Parameters: \"{tmp}\MFOPG.zip -d {app}\sql\MFOPG\\\"; Flags : runhidden;
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MSSQL.zip -d {app}\sql\MSSQL\; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MFO_Oracle.zip -d {app}\sql\MFO_Oracle\; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MFO_PostgreSQL.zip -d {app}\sql\MFO_PostgreSQL\; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\jdk17.zip -d {app}\bin\jdk17\; Flags : runhidden

;Filename: {app}\PlatformJS\bin\PlatformJS64.exe; Description: Launch Platform. JS 64bit; Flags: nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin; Check: IsWin64
;Filename: {app}\PlatformJS\bin\PlatformJS32.exe; Description: Launch Platform. JS 32bit; Flags: nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin; Check: not IsWin64
Filename: net; Description: {cm:selectInstall64}; Flags: runhidden nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin
;Filename: C:\Program Files (x86)\Google\Chrome\Application\chrome.exe; Parameters: http://127.0.0.1:8080/Maxgauge/Config; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent
Filename: net; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent

[UninstallRun]
Filename: {sys}\sc.exe; Parameters: stop PlatformJS_OBS; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PlatformJS_OBS; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop PlatformJS8080; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PlatformJS8080; WorkingDir: {app}; Flags: runhidden

[UninstallDelete]
Type: filesandordirs; Name: {app}



;[CustomMessages]
;DatabaseInfoForm_Caption=Platform JS Infomation
;DatabaseInfoForm_Description=Input database infomation.
;DatabaseInfoForm_DatabaseName=Database Alias
;//DatabaseInfoForm_DatabaseType=DB Type
;DatabaseInfoForm_DatabaseServer=Server(IP)
;//DatabaseInfoForm_Database=Database
;DatabaseInfoForm_DatabaseUser=User
;DatabaseInfoForm_Databasepwd=password
;DatabaseInfoForm_port=Port
;DatabaseInfoForm_DatabaseDescription=Description
;DatabaseInfoForm_FileWrite=Write
;DatabaseInfoForm_GatherIP=Gather IP
;DatabaseInfoForm_GatherPort=Gather Port

;Repository_Caption=DLL Infomation
;Repository_Description=Input database infomation.
;Repository_Info_Refresh=Refresh Time
;Repository_Info_pwd=Password
;Repository_Info_user=User
;//Repository_Info_DB=Database
;//Repository_Info_Type=DB Type
;Repository_Info_Server=Server
;Repository_Info_Port=Port
;Repository_Info_Gather_IP=Gather IP
;Repository_Info_Gather_Port=Gather Port
;Repository_Info_Name=Database Alias


[Code]

var
  lblDatabaseName: TLabel;
  edtDatabaseName: TEdit;
  lblDatabaseType: TLabel;
  edtDatabaseType: TEdit;
  lblDatabaseSvr : TLabel;
  edtDatabaseSvr : TEdit;
  lblDatabaseDB  : TLabel;
  edtDatabaseDB  : TEdit;
  lblDatabaseUser: TLabel;
  edtDatabaseUser: TEdit;
  lblDatabasepwd : TLabel;
  edtDatabasepwd : TEdit;
  lblsqlDir      : TLabel;
  edtsqlDir      : TEdit;
  lblDescription : TLabel;
  edtDescription : TEdit;
  lblgatherip    : TLabel;
  edtgatherip    : TEdit;
  lblgatherport  : TLabel;
  edtgatherport  : TEdit;

  cbType         : TCombobox;

  serverType     : String;


  Button1: TButton;

  Panel1: TPanel;

  function xmEncryptc( source : pAnsichar ) : pAnsichar;
  external 'xmEncryptc@files:excrypt32.dll stdcall' ;


function NextButtonClick(CurPageID: Integer): Boolean;
var
  ErrorCode: Integer;
  path : string;
begin
  // always allow move through the wizard pages
  Result := True;

  if (CurPageID = wpFinished) and (WizardForm.RunList.Visible) then
  begin
    if WizardForm.RunList.Checked[0] then
    begin
      Exec(ExpandConstant('{app}\PlatformJS\bin\PlatformJS_Service64.exe'), '-install', '', SW_SHOW, ewNoWait, ErrorCode );
    end
    else
    begin
      Exec(ExpandConstant('{app}\PlatformJS\bin\PlatformJS_Service32.exe'), '-install', '', SW_SHOW, ewNoWait, ErrorCode );
    end;

	sleep(1000);
	ShellExec('', 'net', 'start platformJS8080', '', SW_HIDE, ewNoWait, ErrorCode );

	if WizardForm.RunList.Checked[1] then
	begin
		sleep(1000);
	    ShellExec('open', 'chrome.exe', 'http://127.0.0.1:8080/Maxgauge/Config', '', SW_HIDE, ewNoWait, ErrorCode );
	end

  end;
end;

procedure CurStepChanged(CurStep:TSetupStep);
var
	ErrorCode: Integer;
begin

    if (CurStep=ssPostInstall) then
    begin

		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"PlatformJS_OBS\" start= auto  binPath= \"{app}\PlatformJS\bin\mxg_obsd.exe -f {app}\PlatformJS\conf\common.conf -i  10 -D -OTHERD\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
    end
    if (CurStep=ssDone) then
	begin
			sleep(1000);
	 		ShellExec('', 'net', 'start PlatformJS_OBS', '', SW_HIDE, ewNoWait, ErrorCode );
	end


end;





{ DatabaseInfo_Activate }

procedure SampleForm_Activate(Page: TWizardPage);
begin
  // enter code here...
end;

{ SampleForm_ShouldSkipPage }

function SampleForm_ShouldSkipPage(Page: TWizardPage): Boolean;
begin
  Result := False;
end;

{ SampleForm_BackButtonClick }

function SampleForm_BackButtonClick(Page: TWizardPage): Boolean;
begin
  Result := True;
end;


{ SampleForm_CancelButtonClick }

procedure SampleForm_CancelButtonClick(Page: TWizardPage; var Cancel, Confirm: Boolean);
begin
  // enter code here...
end;


procedure MaxgaugeFileWrite( sender : TObject );
var
  jsonString : string;
  appPath    : string;
  ChangePath : string;
begin
  appPath := ExpandConstant('{app}\PlatformJS');
  ChangePath := appPath;
  StringChange(ChangePath,'\','\\\\');

    jsonString :=
    '{' + #13#10+
    '\"DATABASES\":[' + #13#10+
    '{' +
        '\"DATABASE_NAME\": \"'+edtDatabaseName.text+'\",' + #13#10+
        '\"DATABASE_PASSWORD\": \"'+string( xmEncryptc( +edtDatabasepwd.Text))+'\",' + #13#10+
        '\"DATABASE_USER\": \"'+string( xmEncryptc( edtDatabaseUser.text))+'\",' + #13#10+
        '\"DATABASE_TYPE\": \"Oracle\",' + #13#10+
        '\"TNS_NAME\": \"'+edtDatabaseSvr.text+'\",' + #13#10;

     jsonString := jsonString +
       '\"GATHER_PORT\": \"'+edtgatherport.text+'\",' + #13#10+
       '\"GATHER_IP\": \"'+edtgatherip.text+'\"' + #13#10+
    '}'+#13#10+
    '],'+#13#10+
    '\"DEFAULT_DATABASE\": \"'+ edtDatabaseName.text+'\",' + #13#10+
    '\"REFRESH_TIME\": \"3\",' + #13#10+
    '\"GATHER_PORT\": \"'+edtgatherport.text+'\",' + #13#10+
    '\"GATHER_IP\": \"'+edtgatherip.text+'\", ' + #13#10+
    '\"THREAD_POOL_MAX\"  : \"20\",' + #13#10+
	'\"THREAD_POOL_MIN\"  : \"3\",' + #13#10+
	'\"THREAD_IDLE_TIME\" : \"60\",' + #13#10+
    '\"DEBUG_MODE\":false,'+ #13#10+
    ' \"VERSION\":\"5.3.1\"'+ #13#10+
    '}';


  //MsgBox( ExpandConstant('{cm:DatabaseInfoForm_base_http_directory}'), mbInformation, MB_OK);

  SaveStringToFile(appPath + '\bin\repository.info', jsonString, False);


  jsonString :=
    '{'+
    {  JSFlatform Default Info }
    '\"service_port\":8080,'+#13#10+
    '\"base_http_directory\":\".\\web\",' + #13#10+
    '\"base_sql_directory\":\".\\sql\",' + #13#10+
    '\"base_script_directory\":\".\\script\",' + #13#10+
    '\"base_plugin_directory\":\".\\plugin\",' + #13#10+
    '\"databases\":['+#13#10+
    { Database info }
    '{' + #13#10+
    '\"database_name\":\"'+edtDatabaseName.Text+'\",'+#13#10+
    '\"database_type\":\"Oracle\",'+#13#10+
    '\"database_server\":\"'+edtDatabaseSvr.Text+'\",'+#13#10+
    '\"database_user\":\"'+string( xmEncryptc( edtDatabaseUser.Text))+'\",'+#13#10+
    '\"database_password\":\"'+string( xmEncryptc( edtDatabasepwd.Text))+'\",'+#13#10+
    '\"sql_directory\":\".\\sql\\MFO_Oracle\",'+#13#10+
    '\"database_description\":\"'+edtDescription.Text+'\"'+#13#10+
    '}' + #13#10+
    '],' + #13#10+
    { Maxgauge Plugin }
    '\"plugins\": [ '+ #13#10+
'{' + #13#10 +
'    \"plugin_name\": \"mxg_decrypts\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_decrypts\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'   \"plugin_name\": \"mxg_ReportStream\", '+ #13#10 +
'   \"plugin_type\": \"function\", '+ #13#10 +
'   \"plugin_function\": \"mxg_ReportStream\", '+ #13#10 +
'   \"plugin_dll\": \"maxgauge.dll\", '+ #13#10 +
'   \"plugin_active\": true' + #13#10 +
'},'+ #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_run_shell_script\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_run_shell_script\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getList\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getList\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getInstanceInfo\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getInstanceInfo\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopStat\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopStat\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopEvent\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopEvent\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopProcess\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopProcess\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSessionDetail\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSessionDetail\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ExecuteQuery\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ExecuteQuery\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSessionManager\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSessionManager\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"plugin_service_3\",' + #13#10 +
'    \"plugin_type\": \"continuous\",' + #13#10 +
'    \"plugin_function\": \"service_function\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_options\": {' + #13#10 +
'        \"name\": \"service_2\",' + #13#10 +
'        \"targets\": [' + #13#10 +
'' + #13#10 +
'        ]' + #13#10 +
'    },' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getList\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getList\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getInstanceInfo\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getInstanceInfo\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopStat\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopStat\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopEvent\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopEvent\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopProcess\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopProcess\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSessionDetail\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSessionDetail\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ExecuteQuery\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ExecuteQuery\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSessionManager\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSessionManager\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getPreviousChartData\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getPreviousChartData\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSQLFullText\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSQLFullText\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getRemoteSessionOut\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getRemoteSessionOut\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getRemoteSessionIn\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getRemoteSessionIn\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getInstanceHostName\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getInstanceHostName\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"getDirectoryFileList\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"getDirectoryFileList\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_RepoConnect\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_RepoConnect\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_createENV\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_createENV\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_createInstance\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_createInstance\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ChangeRefreshTime\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ChangeRefreshTime\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_bind\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_bind\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_plan\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_plan\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_monitor_bind\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_monitor_bind\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_Checklogin\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_Checklogin\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_Userwrite\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_Userwrite\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ChangePolicy\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ChangePolicy\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ChangeSQLNET\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ChangeSQLNET\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_password_update\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_password_update\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_encrypt\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_encrypt\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_decrypt\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_decrypt\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_encryptO\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_encryptO\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_instance_option\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_instance_option\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_userdelete\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_userdelete\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getProcesslist\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getProcesslist\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"plugin_service_3\",' + #13#10 +
'    \"plugin_type\": \"continuous\",' + #13#10 +
'    \"plugin_function\": \"service_function\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_options\": {' + #13#10 +
'        \"name\": \"service_5\",' + #13#10 +
'        \"targets\": [' + #13#10 +
'' + #13#10 +
'        ]' + #13#10 +
'    },' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"get_stat_unit\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"get_stat_unit\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge_plugin.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"get_os_unit\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"get_os_unit\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge_plugin.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"setParameter\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"setParameter\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge_plugin.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"get_last_alarm\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"get_last_alarm\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge_plugin.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"DG_Reload\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"DG_Reload\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge_plugin.dll\",' + #13#10 +
'    \"plugin_active\": true ' + #13#10 +
'},' + #13#10 +
    '{ ' + #13#10 +
    '    \"plugin_name\": \"plugin_service_6\" , ' + #13#10 +
    '    \"plugin_type\": \"continuous\", ' + #13#10 +
    '    \"plugin_function\": \"service_function\", ' + #13#10 +
    '    \"plugin_dll\": \"Maxgauge_plugin.dll\", ' + #13#10 +
    '    \"plugin_options\": { ' + #13#10 +
    '        \"name\": \"service_6\", ' + #13#10 +
    '        \"targets\": [ ' + #13#10 +
    '        ] ' + #13#10 +
    '     }, ' + #13#10 +
    '    \"plugin_active\": true ' + #13#10 +
    '} ' + #13#10 +
    '],' + #13#10+
    '\"database_default\": \"'+ edtDatabaseName.Text +'\",'+ #13#10+
    '\"database_default_list\":[{\"uri\":\"/maxgauge\", \"database\":\"'+edtDatabaseName.Text+'\"}, {\"uri\":\"/maxgauge/rtm\", \"database\":\"'+edtDatabaseName.Text+'\"}, {\"uri\":\"/maxgauge/pa\", \"database\":\"'+edtDatabaseName.Text+'\"}, {\"uri\":\"/maxgauge/config\", \"database\":\"'+edtDatabaseName.Text+'\"}], ' + #13#10+
    '\"database_pool_max\": 300,' + #13#10+
    '\"database_pool_min\": 1, ' + #13#10+
    '\"database_maxrows\": 2000000, ' + #13#10+
    '\"date_format\": \"yyyy-mm-dd\", ' + #13#10+
    '\"time_format\": \"hh:nn:ss\", ' + #13#10+
    '\"sample_date_format\": \"yy-mm-dd\", ' + #13#10+
    '\"sample_time_format\": \"hh:nn:ss\", ' + #13#10+
    '\"use_permessage_deflate\":false, ' + #13#10+
    '\"use_arrayed_packets\":false, ' + #13#10+
    '\"arrayed_packets_delay\":200, ' + #13#10+
    '\"compress_size\": 4096000, ' + #13#10+
    '\"debugging\": false, ' + #13#10+
    '\"auto_online\": true ' + #13#10+
    '}';
  //MsgBox( ExpandConstant('{cm:DatabaseInfoForm_base_http_directory}'), mbInformation, MB_OK);

  SaveStringToFile(appPath + '\conf\config.json', jsonString, False);
end;

{ SampleForm_NextkButtonClick }

function SampleForm_NextButtonClick(Page: TWizardPage): Boolean;
begin
  MaxgaugeFileWrite( nil );
  Result := True;
end;


{ DatabaseInfoForm_CreatePage }

function DatabaseInfoForm_CreatePage(PreviousPageId: Integer): Integer;
var
  Page: TWizardPage;
begin
  Page := CreateCustomPage(
    PreviousPageId,
    ExpandConstant('{cm:DatabaseInfoForm_Caption}'),
    ExpandConstant('{cm:DatabaseInfoForm_Description}')
  );

  { Panel1 }
  Panel1 := TPanel.Create(Page);
  with Panel1 do
  begin
    Parent      := Page.Surface;
    Left        := ScaleX(8);
    Top         := ScaleY(2);
    Width       := ScaleX(393);
    Height 	    := ScaleY(233);
    BevelInner  := bvNone;
    BevelWidth  := ScaleX(1);
    BorderStyle := bsSingle;
    TabOrder    := 0;
  end;

{ Label1 }
  lblDatabaseName := TLabel.Create(Page);
  with lblDatabaseName do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(10);
    Width   := ScaleX(92);
    Height  := ScaleY(13);

    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseName}');
  end;

  edtDatabaseName := TEdit.Create(Page);
  with edtDatabaseName do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(8);
    Width  := ScaleX(200);
    Height := ScaleY(13);
//    Caption := ExpandConstant('{cm:DatabaseInfoForm_service_port}');
   Text    := 'maxgauge';
  end;



  lblDatabaseSvr := TLabel.Create(Page);
  with lblDatabaseSvr do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(20) + edtDatabaseName.height;
    //Left    := ScaleX(16);
    //Top     := ScaleY(39) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    //Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseServer}');
    Caption := 'TNS Name';
  end;

  edtDatabaseSvr := TEdit.Create(Page);
  with edtDatabaseSvr do
  begin
    Parent := Panel1;
    //Left   := ScaleX(100);
    //Top    := ScaleY(49);
    Left   := ScaleX(100);
    Top    := ScaleY(29);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '';
  end;
//----------------------------------------------------------------------------------

  //----------------------------------------------------------------------------------
  lblDatabaseUser := TLabel.Create(Page);
  with lblDatabaseUser do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(39) + edtDatabaseName.height;
    //Left    := ScaleX(16);
    //Top     := ScaleY(59) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseUser}');
  end;

  edtDatabaseUser := TEdit.Create(Page);
  with edtDatabaseUser do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(49);
    //Left   := ScaleX(100);
    //Top    := ScaleY(69);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '';
  end;

    //----------------------------------------------------------------------------------
  lblDatabasepwd := TLabel.Create(Page);
  with lblDatabasepwd do
  begin
    Parent  := Panel1;
    //Left    := ScaleX(16);
    //Top     := ScaleY(99) + edtDatabaseName.height;
    Left    := ScaleX(16);
    Top     := ScaleY(59) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabasePwd}');
  end;

  edtDatabasepwd := TEdit.Create(Page);
  with edtDatabasepwd do
  begin
    Parent := Panel1;
    //Left   := ScaleX(100);
    //Top    := ScaleY(109);
    Left   := ScaleX(100);
    Top    := ScaleY(69);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    PasswordChar := '*';
  end;

  //----------------------------------------------------------------------------------
  lblDescription := TLabel.Create(Page);
  with lblDescription do
  begin
    Parent  := Panel1;
    //Left    := ScaleX(16);
    //Top     := ScaleY(119) + edtDatabaseName.height;
    Left    := ScaleX(16);
    Top     := ScaleY(79) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseDescription}');
  end;

  edtDescription := TEdit.Create(Page);
  with edtDescription do
  begin
    Parent := Panel1;
    //Left   := ScaleX(100);
    //Top    := ScaleY(129);
    Left   := ScaleX(100);
    Top    := ScaleY(89);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := 'Oracle';
  end;

  //----------------------------------------------------------------------------------
  lblsqlDir := TLabel.Create(Page);
  with lblsqlDir do
  begin
    Parent  := Panel1;
    //Left    := ScaleX(16);
    //Top     := ScaleY(139) + edtDatabaseName.height;
    Left    := ScaleX(16);
    Top     := ScaleY(99) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_port}');
    visible := false;
  end;

  edtsqlDir := TEdit.Create(Page);
  with edtsqlDir do
  begin
    Parent := Panel1;
    //Left   := ScaleX(100);
    //Top    := ScaleY(149);
    Left   := ScaleX(100);
    Top    := ScaleY(109);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    visible := false;
    Text    := '5432';
  end;


  // Gather Info
  lblgatherip    := TLabel.Create( page );
  with lblgatherip do
  begin
    Parent := Panel1;
    Left   := ScaleX(16);
    Top    := ScaleY(169) + edtDatabaseName.height;
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_GatherIP}');
  end;

  edtgatherip    := TEdit.Create( page );
  with edtgatherip do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(179);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '0.0.0.0';
  end;

  lblgatherport  := TLabel.Create( page );
  with lblgatherport do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(189) + edtDatabaseName.height;
    Width   := ScaleX(200);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_GatherPort}');
  end;

  edtgatherport  := TEdit.Create( page );
  with edtgatherport do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(199);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '7000';
  end;

  { Button1 }
  {Button1 := TButton.Create(Page);
  with Button1 do
  begin
    Parent   := Panel1;
    Left     := ScaleX(100);
    Top      := ScaleY(169);
    Width    := ScaleX(75);
    Height   := ScaleY(23);
    Caption  := ExpandConstant('{cm:DatabaseInfoForm_FileWrite');
    TabOrder := 0;
    onClick  := @Filewrite;
  end;
 }
  with Page do
  begin
    OnActivate := @SampleForm_Activate;
    OnShouldSkipPage := @SampleForm_ShouldSkipPage;
    OnBackButtonClick := @SampleForm_BackButtonClick;
    OnNextButtonClick := @SampleForm_NextButtonClick;
    OnCancelButtonClick := @SampleForm_CancelButtonClick;
  end;

  Result := Page.ID;
end;

{ DatabaseInfoForm_InitializeWizard }

//procedure CurStepChanged(CurStep:TSetupStep);
//begin
  //MsgBox( inttostr( ord( CurStep )), mbError, MB_OK);
//end;

procedure InitializeWizard();
begin
  // Common
  DatabaseInfoForm_CreatePage(wpInstalling);
end;

[Files]
;=====================
;2014년 09월 30일 Web 버전.
;=====================" >> $ISS_FILE_DIR
}

ISS_FILE_CODE_PART_MFO_PG_160520()
{
echo "


[Icons]
Name: {group}\PlatformJS Start; Filename: {app}\PlatformJS\bin\sc_start.bat; Comment: web service start; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Start; Filename: {app}\PlatformJS\bin\sc_start.bat; WorkingDir: {app}\PlatformJS\bin; Comment: web service start; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {group}\PlatformJS Stop; Filename: {app}\PlatformJS\bin\sc_stop.bat; Comment: web service stop; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Stop; Filename: {app}\PlatformJS\bin\sc_stop.bat; WorkingDir: {app}\PlatformJS\bin\; Comment: web service stop; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {group}\PlatformJS Restart; Filename: {app}\PlatformJS\bin\sc_restart.bat; Comment: web service restart; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Restart; Filename: {app}\PlatformJS\bin\sc_restart.bat; WorkingDir: {app}\PlatformJS\bin\; Comment: web service restart; IconFilename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Tasks: desktopicon

[Run]
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MAXGAUGE.zip -d {app}\web\MAXGAUGE\; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\Intermax.zip -d {app}\web\Intermax\; Flags : runhidden
;Filename: \"{tmp}\UNZIP.EXE\"; Parameters: \"{tmp}\MFOPG.zip -d {app}\sql\MFOPG\\\"; Flags : runhidden;
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MSSQL.zip -d {app}\sql\MSSQL\; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MFO_Oracle.zip -d {app}\sql\MFO_Oracle\; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MFO_PostgreSQL.zip -d {app}\sql\MFO_PostgreSQL\; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\jdk17.zip -d {app}\bin\jdk17\; Flags : runhidden

Filename: net; Description: {cm:selectInstall64}; Flags: runhidden nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin
Filename: net; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent
;Filename: C:\Program Files (x86)\Google\Chrome\Application\chrome.exe; Parameters: http://127.0.0.1:8080/Maxgauge/Config; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent


[UninstallRun]

Filename: {sys}\sc.exe; Parameters: stop PlatformJS_OBS; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PlatformJS_OBS; WorkingDir: {app}; Flags: runhidden


Filename: {sys}\sc.exe; Parameters: stop PlatformJS8080; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PlatformJS8080; WorkingDir: {app}; Flags: runhidden

[UninstallDelete]
Type: filesandordirs; Name: {app}


;[CustomMessages]
;DatabaseInfoForm_Caption=Platform JS Infomation
;DatabaseInfoForm_Description=Input database infomation.
;DatabaseInfoForm_DatabaseName=Database Name
;DatabaseInfoForm_DatabaseType=Type
;DatabaseInfoForm_DatabaseServer=Server(IP)
;DatabaseInfoForm_Database=Database
;DatabaseInfoForm_DatabaseUser=User
;DatabaseInfoForm_Databasepwd=password
;DatabaseInfoForm_port=Port
;DatabaseInfoForm_DatabaseDescription=Description
;DatabaseInfoForm_FileWrite=Write
;DatabaseInfoForm_GatherIP=Gather IP
;DatabaseInfoForm_GatherPort=Gather Port

;Repository_Caption=DLL Infomation
;Repository_Description=Input database infomation.
;Repository_Info_Refresh=Refresh Time
;Repository_Info_pwd=Password
;Repository_Info_user=User
;Repository_Info_DB=Database
;Repository_Info_Type=Type
;Repository_Info_Server=Server
;Repository_Info_Port=Port
;Repository_Info_Gather_IP=Gather IP
;Repository_Info_Gather_Port=Gather Port
;Repository_Info_Name=Database Name


[Code]

var
  lblDatabaseName: TLabel;
  edtDatabaseName: TEdit;
  lblDatabaseType: TLabel;
  edtDatabaseType: TEdit;
  lblDatabaseSvr : TLabel;
  edtDatabaseSvr : TEdit;
  lblDatabaseDB  : TLabel;
  edtDatabaseDB  : TEdit;
  lblDatabaseUser: TLabel;
  edtDatabaseUser: TEdit;
  lblDatabasepwd : TLabel;
  edtDatabasepwd : TEdit;
  lblsqlDir      : TLabel;
  edtsqlDir      : TEdit;
  lblDescription : TLabel;
  edtDescription : TEdit;
  lblgatherip    : TLabel;
  edtgatherip    : TEdit;
  lblgatherport  : TLabel;
  edtgatherport  : TEdit;

  //cbType         : TCombobox;

  serverType     : String;


  Button1: TButton;

  Panel1: TPanel;

  function xmEncryptc( source : pAnsichar ) : pAnsichar;
  external 'xmEncryptc@files:excrypt32.dll stdcall' ;


function NextButtonClick(CurPageID: Integer): Boolean;
var
  ErrorCode: Integer;
  path : string;
begin
  // always allow move through the wizard pages
  Result := True;

  if (CurPageID = wpFinished) and (WizardForm.RunList.Visible) then
  begin
    if WizardForm.RunList.Checked[0] then
    begin
      Exec(ExpandConstant('{app}\PlatformJS\bin\PlatformJS_Service64.exe'), '-install', '', SW_SHOW, ewNoWait, ErrorCode );
    end
    else
    begin
      Exec(ExpandConstant('{app}\PlatformJS\bin\PlatformJS_Service32.exe'), '-install', '', SW_SHOW, ewNoWait, ErrorCode );
    end;

    sleep(1000);
	ShellExec('', 'net', 'start platformJS8080', '', SW_HIDE, ewNoWait, ErrorCode );

	if WizardForm.RunList.Checked[1] then
	begin
		sleep(1000);
	    ShellExec('open', 'chrome.exe', 'http://127.0.0.1:8080/Maxgauge/Config', '', SW_HIDE, ewNoWait, ErrorCode );
	end
  end;
end;



procedure CurStepChanged(CurStep:TSetupStep);
var
	ErrorCode: Integer;
begin

    if (CurStep=ssPostInstall) then
    begin

		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"PlatformJS_OBS\" start= auto  binPath= \"{app}\PlatformJS\bin\mxg_obsd.exe -f {app}\PlatformJS\conf\common.conf -i  10 -D -OTHERD\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
    end
    if (CurStep=ssDone) then
	begin
			sleep(1000);
	 		ShellExec('', 'net', 'start PlatformJS_OBS', '', SW_HIDE, ewNoWait, ErrorCode );
	end


end;



{ DatabaseInfo_Activate }

procedure SampleForm_Activate(Page: TWizardPage);
begin
  // enter code here...
end;

{ SampleForm_ShouldSkipPage }

function SampleForm_ShouldSkipPage(Page: TWizardPage): Boolean;
begin
  Result := False;
end;

{ SampleForm_BackButtonClick }

function SampleForm_BackButtonClick(Page: TWizardPage): Boolean;
begin
  Result := True;
end;


{ SampleForm_CancelButtonClick }

procedure SampleForm_CancelButtonClick(Page: TWizardPage; var Cancel, Confirm: Boolean);
begin
  // enter code here...
end;

procedure MaxgaugeFileWrite( sender : TObject );
var
  jsonString : string;
  appPath    : string;
  ChangePath : string;
begin
  appPath := ExpandConstant('{app}\PlatformJS');
  ChangePath := appPath;
  StringChange(ChangePath,'\','\\\\');

    jsonString :=
    '{' + #13#10+
    '\"DATABASES\":[' + #13#10+
    '{' +
        '\"DATABASE_NAME\": \"'+edtDatabaseName.text+'\",' + #13#10+
        '\"DATABASE_PASSWORD\": \"'+string( xmEncryptc( +edtDatabasepwd.Text))+'\",' + #13#10+
        '\"DATABASE_DATABASE\": \"'+edtDatabaseDB.text+'\",' + #13#10+
        '\"DATABASE_USER\": \"'+string( xmEncryptc( edtDatabaseUser.text))+'\",' + #13#10+
        '\"DATABASE_TYPE\": \"'+edtDatabaseType.Text+'\",' + #13#10+
        '\"DATABASE_SERVER\": \"'+edtDatabaseSvr.text+'\",' + #13#10+
        '\"DATABASE_PORT\": \"'+edtsqlDir.text+'\", '+#13#10;

     jsonString := jsonString +
       '\"GATHER_PORT\": \"'+edtgatherport.text+'\",' + #13#10+
       '\"GATHER_IP\": \"'+edtgatherip.text+'\"' + #13#10+
    '}'+#13#10+
    '],'+#13#10+
    '\"DEFAULT_DATABASE\": \"'+ edtDatabaseName.text+'\",' + #13#10+
    '\"REFRESH_TIME\": \"3\",' + #13#10+
    '\"GATHER_PORT\": \"'+edtgatherport.text+'\",' + #13#10+
    '\"GATHER_IP\": \"'+edtgatherip.text+'\", ' + #13#10+
    '\"THREAD_POOL_MAX\"  : \"20\",' + #13#10+
	'\"THREAD_POOL_MIN\"  : \"3\",' + #13#10+
	'\"THREAD_IDLE_TIME\" : \"60\",' + #13#10+
    '\"DEBUG_MODE\":false,'+ #13#10+
    '\"VERSION\":\"5.3.1\"'+ #13#10+
    '}';


  //MsgBox( ExpandConstant('{cm:DatabaseInfoForm_base_http_directory}'), mbInformation, MB_OK);

  SaveStringToFile(appPath + '\bin\repository.info', jsonString, False);

  jsonString :=
    '{'+
    {  JSFlatform Default Info }
    '\"service_port\":8080,'+#13#10+
    '\"base_http_directory\":\".\\web\",' + #13#10+
    '\"base_sql_directory\":\".\\sql\",' + #13#10+
    '\"base_script_directory\":\".\\script\",' + #13#10+
    '\"base_plugin_directory\":\".\\plugin\",' + #13#10+
    '\"databases\":['+#13#10+
    { Database info }
    '{' + #13#10+
    '\"database_name\":\"'+edtDatabaseName.Text+'\",'+#13#10+
    '\"database_type\":\"'+edtDatabaseType.Text+'\",'+#13#10+
    '\"database_server\":\"'+edtDatabaseSvr.Text+'\",'+#13#10+
    '\"database_port\": \"'+edtsqlDir.text+'\", '+#13#10+
    '\"database_database\":\"'+edtDatabaseDB.Text+'\",'+#13#10+
    '\"database_user\":\"'+string( xmEncryptc( edtDatabaseUser.Text))+'\",'+#13#10+
    '\"database_password\":\"'+string( xmEncryptc( edtDatabasepwd.Text))+'\",'+#13#10+
    '\"sql_directory\":\".\\sql\\MFO_'+ edtDatabaseType.Text+'\",'+#13#10+
    '\"database_description\":\"'+edtDescription.Text+'\"'+#13#10+
    '}' + #13#10+
    '],' + #13#10+
    { Maxgauge Plugin }
    '\"plugins\": [ '+ #13#10+
'{' + #13#10 +
'   \"plugin_name\": \"mxg_decrypts\", '+ #13#10 +
'   \"plugin_type\": \"function\", '+ #13#10 +
'   \"plugin_function\": \"mxg_decrypts\", '+ #13#10 +
'   \"plugin_dll\": \"maxgauge.dll\", '+ #13#10 +
'   \"plugin_active\": true' + #13#10 +
'},'+ #13#10 +
'{' + #13#10 +
'   \"plugin_name\": \"mxg_ReportStream\", '+ #13#10 +
'   \"plugin_type\": \"function\", '+ #13#10 +
'   \"plugin_function\": \"mxg_ReportStream\", '+ #13#10 +
'   \"plugin_dll\": \"maxgauge.dll\", '+ #13#10 +
'   \"plugin_active\": true' + #13#10 +
'},'+ #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_run_shell_script\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_run_shell_script\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getList\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getList\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getInstanceInfo\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getInstanceInfo\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopStat\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopStat\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopEvent\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopEvent\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopProcess\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopProcess\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSessionDetail\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSessionDetail\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ExecuteQuery\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ExecuteQuery\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSessionManager\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSessionManager\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"plugin_service_3\",' + #13#10 +
'    \"plugin_type\": \"continuous\",' + #13#10 +
'    \"plugin_function\": \"service_function\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_options\": {' + #13#10 +
'        \"name\": \"service_2\",' + #13#10 +
'        \"targets\": [' + #13#10 +
'' + #13#10 +
'        ]' + #13#10 +
'    },' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getList\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getList\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getInstanceInfo\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getInstanceInfo\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopStat\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopStat\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopEvent\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopEvent\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getTopProcess\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getTopProcess\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSessionDetail\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSessionDetail\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ExecuteQuery\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ExecuteQuery\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSessionManager\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSessionManager\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getPreviousChartData\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getPreviousChartData\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getSQLFullText\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getSQLFullText\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getRemoteSessionOut\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getRemoteSessionOut\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getRemoteSessionIn\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getRemoteSessionIn\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getInstanceHostName\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getInstanceHostName\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"getDirectoryFileList\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"getDirectoryFileList\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_RepoConnect\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_RepoConnect\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_createENV\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_createENV\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_createInstance\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_createInstance\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ChangeRefreshTime\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ChangeRefreshTime\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_bind\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_bind\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_plan\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_plan\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_monitor_bind\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_monitor_bind\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_Checklogin\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_Checklogin\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_Userwrite\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_Userwrite\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ChangePolicy\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ChangePolicy\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_ChangeSQLNET\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_ChangeSQLNET\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_password_update\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_password_update\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_encrypt\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_encrypt\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_decrypt\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_decrypt\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_encryptO\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_encryptO\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_instance_option\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_instance_option\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_userdelete\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_userdelete\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"mxg_getProcesslist\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"mxg_getProcesslist\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"plugin_service_3\",' + #13#10 +
'    \"plugin_type\": \"continuous\",' + #13#10 +
'    \"plugin_function\": \"service_function\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge.dll\",' + #13#10 +
'    \"plugin_options\": {' + #13#10 +
'        \"name\": \"service_5\",' + #13#10 +
'        \"targets\": [' + #13#10 +
'' + #13#10 +
'        ]' + #13#10 +
'    },' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"get_stat_unit\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"get_stat_unit\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge_plugin.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"get_os_unit\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"get_os_unit\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge_plugin.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"setParameter\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"setParameter\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge_plugin.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
'{' + #13#10 +
'    \"plugin_name\": \"get_last_alarm\",' + #13#10 +
'    \"plugin_type\": \"function\",' + #13#10 +
'    \"plugin_function\": \"get_last_alarm\",' + #13#10 +
'    \"plugin_dll\": \"maxgauge_plugin.dll\",' + #13#10 +
'    \"plugin_active\": true' + #13#10 +
'},' + #13#10 +
    '{ ' + #13#10 +
    '    \"plugin_name\": \"plugin_service_6\" , ' + #13#10 +
    '    \"plugin_type\": \"continuous\", ' + #13#10 +
    '    \"plugin_function\": \"service_function\", ' + #13#10 +
    '    \"plugin_dll\": \"Maxgauge_plugin.dll\", ' + #13#10 +
    '    \"plugin_options\": { ' + #13#10 +
    '        \"name\": \"service_6\", ' + #13#10 +
    '        \"targets\": [ ' + #13#10 +
    '        ] ' + #13#10 +
    '     }, ' + #13#10 +
    '    \"plugin_active\": true ' + #13#10 +
    '} ' + #13#10 +
    '],' + #13#10+
    '\"database_default\": \"'+ edtDatabaseName.Text +'\",'+ #13#10+
    '\"database_default_list\":[{\"uri\":\"/maxgauge\", \"database\":\"'+edtDatabaseName.Text+'\"}, {\"uri\":\"/maxgauge/rtm\", \"database\":\"'+edtDatabaseName.Text+'\"}, {\"uri\":\"/maxgauge/pa\", \"database\":\"'+edtDatabaseName.Text+'\"}, {\"uri\":\"/maxgauge/config\", \"database\":\"'+edtDatabaseName.Text+'\"}], ' + #13#10+
    '\"database_pool_max\": 600,' + #13#10+
    '\"database_pool_min\": 1, ' + #13#10+
    '\"database_maxrows\": 2000000, ' + #13#10+
    '\"date_format\": \"yyyy-mm-dd\", ' + #13#10+
    '\"time_format\": \"hh:nn:ss\", ' + #13#10+
    '\"sample_date_format\": \"yy-mm-dd\", ' + #13#10+
    '\"sample_time_format\": \"hh:nn:ss\", ' + #13#10+
    '\"compress_size\": 4096000, ' + #13#10+
    '\"use_permessage_deflate\":false, ' + #13#10+
    '\"use_arrayed_packets\":false, ' + #13#10+
    '\"arrayed_packets_delay\":200, ' + #13#10+
    '\"debugging\": false, ' + #13#10+
    '\"auto_online\": true ' + #13#10+
    '}';
  //MsgBox( ExpandConstant('{cm:DatabaseInfoForm_base_http_directory}'), mbInformation, MB_OK);

  SaveStringToFile(appPath + '\conf\config.json', jsonString, False);
end;

{ SampleForm_NextkButtonClick }

function SampleForm_NextButtonClick(Page: TWizardPage): Boolean;
begin
  MaxgaugeFileWrite( nil );
  Result := True;
end;

procedure ChangeServerType( Sender : TObject );
begin
  serverType := TCombobox( Sender ).text;

  lblsqlDir.visible := false;
  edtsqlDir.visible := false;

  if serverType = 'postgresql' then
  begin
    lblsqlDir.visible := true;
    edtsqlDir.visible := true;
  end;
end;



{ DatabaseInfoForm_CreatePage }

function DatabaseInfoForm_CreatePage(PreviousPageId: Integer): Integer;
var
  Page: TWizardPage;
begin
  Page := CreateCustomPage(
    PreviousPageId,
    ExpandConstant('{cm:DatabaseInfoForm_Caption}'),
    ExpandConstant('{cm:DatabaseInfoForm_Description}')
  );

  { Panel1 }
  Panel1 := TPanel.Create(Page);
  with Panel1 do
  begin
    Parent      := Page.Surface;
    Left        := ScaleX(8);
    Top         := ScaleY(2);
    Width       := ScaleX(393);
    Height 	    := ScaleY(233);
    BevelInner  := bvNone;
    BevelWidth  := ScaleX(1);
    BorderStyle := bsSingle;
    TabOrder    := 0;
  end;

{ Label1 }
  lblDatabaseName := TLabel.Create(Page);
  with lblDatabaseName do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(10);
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseName}');
  end;

  edtDatabaseName := TEdit.Create(Page);
  with edtDatabaseName do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(8);
    Width  := ScaleX(200);
    Height := ScaleY(13);
//    Caption := ExpandConstant('{cm:DatabaseInfoForm_service_port}');
   Text    := 'maxgauge_pg';
  end;

  lblDatabaseType := TLabel.Create(Page);
  with lblDatabaseType do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(20) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseType}');
  end;
{
  cbType    := TCombobox.Create(Page);
  with cbType do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(29);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    DropDownCount := 3;
    Items.add( 'mssql' );
    Items.add( 'oracle' );
    Items.add( 'postgresql' );
    onChange := @ChangeServerType;
    Text     := 'postgresql';
  end;
}

  edtDatabaseType := TEdit.Create(Page);
  with edtDatabaseType do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(29);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text := 'postgresql';
    readonly:= true;
  end;

  lblDatabaseSvr := TLabel.Create(Page);
  with lblDatabaseSvr do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(39) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseServer}');
  end;

  edtDatabaseSvr := TEdit.Create(Page);
  with edtDatabaseSvr do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(49);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '0.0.0.0';
  end;
//----------------------------------------------------------------------------------
  lblDatabaseDB := TLabel.Create(Page);
  with lblDatabaseDB do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(59) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_Database}');
  end;

  edtDatabaseDB := TEdit.Create(Page);
  with edtDatabaseDB do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(69);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := 'MFO';
  end;

  //----------------------------------------------------------------------------------
  lblDatabaseUser := TLabel.Create(Page);
  with lblDatabaseUser do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(79) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseUser}');
  end;

  edtDatabaseUser := TEdit.Create(Page);
  with edtDatabaseUser do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(89);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := 'postgres';
  end;

    //----------------------------------------------------------------------------------
  lblDatabasepwd := TLabel.Create(Page);
  with lblDatabasepwd do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(99) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabasePwd}');
  end;

  edtDatabasepwd := TEdit.Create(Page);
  with edtDatabasepwd do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(109);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    PasswordChar := '*';
  end;

  //----------------------------------------------------------------------------------
  lblDescription := TLabel.Create(Page);
  with lblDescription do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(119) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseDescription}');
  end;

  edtDescription := TEdit.Create(Page);
  with edtDescription do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(129);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := 'Postgres';
  end;

  //----------------------------------------------------------------------------------
  lblsqlDir := TLabel.Create(Page);
  with lblsqlDir do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(139) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_port}');
//    visible := false;
  end;

  edtsqlDir := TEdit.Create(Page);
  with edtsqlDir do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(149);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    //visible := false;
    Text    := '5432';
  end;


  // Gather Info
  lblgatherip    := TLabel.Create( page );
  with lblgatherip do
  begin
    Parent := Panel1;
    Left   := ScaleX(16);
    Top    := ScaleY(169) + edtDatabaseName.height;
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_GatherIP}');
  end;

  edtgatherip    := TEdit.Create( page );
  with edtgatherip do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(179);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '0.0.0.0';
  end;

  lblgatherport  := TLabel.Create( page );
  with lblgatherport do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(189) + edtDatabaseName.height;
    Width   := ScaleX(200);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_GatherPort}');
  end;

  edtgatherport  := TEdit.Create( page );
  with edtgatherport do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(199);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '7000';
  end;

  { Button1 }
  {Button1 := TButton.Create(Page);
  with Button1 do
  begin
    Parent   := Panel1;
    Left     := ScaleX(100);
    Top      := ScaleY(169);
    Width    := ScaleX(75);
    Height   := ScaleY(23);
    Caption  := ExpandConstant('{cm:DatabaseInfoForm_FileWrite');
    TabOrder := 0;
    onClick  := @Filewrite;
  end;
 }
  with Page do
  begin
    OnActivate := @SampleForm_Activate;
    OnShouldSkipPage := @SampleForm_ShouldSkipPage;
    OnBackButtonClick := @SampleForm_BackButtonClick;
    OnNextButtonClick := @SampleForm_NextButtonClick;
    OnCancelButtonClick := @SampleForm_CancelButtonClick;
  end;

  Result := Page.ID;
end;

{ DatabaseInfoForm_InitializeWizard }

//procedure CurStepChanged(CurStep:TSetupStep);
//begin
  //MsgBox( inttostr( ord( CurStep )), mbError, MB_OK);
//end;

procedure InitializeWizard();
begin
  // Common
  DatabaseInfoForm_CreatePage(wpInstalling);
end;


[Files]
;=====================
;2014년 09월 30일 Web 버전.
;=====================
; source
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\web\MAXGAUGE.zip; DestDir: {tmp}; Flags: ignoreversion


; unzip file
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\UNZIP.EXE; DestDir: {tmp}; Flags: deleteafterinstall

; script
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\Script\lib\cycle.js; DestDir: {app}\Script\lib; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\Script\lib\json.js; DestDir: {app}\Script\lib; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\Script\lib\json_parse.js; DestDir: {app}\Script\lib; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\Script\lib\json_parse_state.js; DestDir: {app}\Script\lib; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\Script\lib\json2.js; DestDir: {app}\Script\lib; Flags: ignoreversion

;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\Script\IMXPA_Service.js; DestDir: {app}\Script; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\Script\javascript_test.js; DestDir: {app}\Script; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\Script\js_test_5.js; DestDir: {app}\Script; Flags: ignoreversion

; sql
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\sql\MFOPG.zip; DestDir: {tmp}; Flags: ignoreversion
;Source: \\main\Setup\INTERMAX_WEB_RELEASE\sql\MSSQL.zip; DestDir: {tmp}; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\sql\MFO_Oracle.zip; DestDir: {tmp}; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\sql\MFO_PostgreSQL.zip; DestDir: {tmp}; Flags: ignoreversion


; 32bit
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\plugin\Win32\Maxgauge.dll; DestDir: {app}\plugin\Win32\; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\plugin\Win32\Maxgauge_Plugin.dll; DestDir: {app}\plugin\Win32\; Flags: ignoreversion

; 64bit
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\plugin\Win64\Maxgauge.dll; DestDir: {app}\plugin\Win64\; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\plugin\Win64\Maxgauge_Plugin.dll; DestDir: {app}\plugin\Win64\; Flags: ignoreversion



; 2014.9.30 ENV 관련 DLL  및 실행 파일 ( Maxgauge )
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\bin\env.dll; DestDir: {app}\bin; Flags: ignoreversion
;Source: \\main\Setup\MAXGAUGE_WEB_RELEASE\bin\MaxgaugeRegisterENV.exe; DestDir: {app}\bin; Flags: ignoreversion

; 2014.9.30 암호화 복호화 관련 dll 추가
;Source: Y:\bin\excrypt.dll; DestDir: {app}; Flags: ignoreversion; Components: InterMax Maxgauge" >> $ISS_FILE_DIR
}

ISS_FILE_TOP_PART()
{
echo "

; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define AppName \"MaxGauge\"
#define AppVerName \"MaxGauge Web\"
#define AppPublisher \"ExEm Company, Inc.\"
#define AppURL \"http://www.ex-em.com\"
#define AppExeName \"PlatformJS64.exe\"
#define SetupDate GetDateTimeString('yymmdd_hhnnss', '', '')

[Setup]

AppName={#AppName}
AppVerName={#AppVerName}
AppPublisher={#AppPublisher}
AppPublisherURL={#AppURL}
AppSupportURL={#AppURL}
AppUpdatesURL={#AppURL}
DefaultDirName={sd}\EXEM
DefaultGroupName=MaxGauge Web
;LicenseFile=\\main\setup\BizMax_Bin\dbmaxlicensed\license.rtf
;LicenseFile=\\192.168.123.101\Setup\MAXGAUGE_WEB_RELEASE\PlatformJS\bin\license.rtf
OutputBaseFilename=MaxGauge_{#SetupDate}$MINOR_FILE_NAME
UninstallDisplayIcon={app}\PlatformJS32.exe
OutputDir=$OUTPUTDIR
ShowLanguageDialog=auto
ShowUndisplayableLanguages=false
Compression=lzma
SolidCompression=yes

;DefaultDirName={pf}\{#MyAppName}
;DefaultGroupName={#MyAppName}


[Languages]
Name: English; MessagesFile: $INNOSETUP_LANG_HOME\Default.isl; LicenseFile: $LICENSEFILE
Name: Korean; MessagesFile: $INNOSETUP_LANG_HOME\Korean.isl; LicenseFile: $LICENSEFILE
Name: Japanese; MessagesFile: $INNOSETUP_LANG_HOME\Japanese.isl; LicenseFile: $LICENSEFILE_JP
Name: ChineseTraditional; MessagesFile: $INNOSETUP_LANG_HOME\ChineseTraditional.isl; LicenseFile: $LICENSEFILE
Name: ChineseSimplified; MessagesFile: $INNOSETUP_LANG_HOME\ChineseSimplified.isl; LicenseFile: $LICENSEFILE
Name: Thai; MessagesFile: $INNOSETUP_LANG_HOME\Thai.isl; LicenseFile: $LICENSEFILE
;Name: Indonesian; MessagesFile: $INNOSETUP_LANG_HOME\Indonesian.isl; LicenseFile: $LICENSEFILE
;Name: Vietnamese; MessagesFile: $INNOSETUP_LANG_HOME\Vietnamese.isl; LicenseFile: $LICENSEFILE

[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}

[Dirs]
;Name: {app}\MAXGAUGE\Database
;Name: {app}\MAXGAUGE\PlatformJS
;Name: {app}\MAXGAUGE\DataGather
;Name: {app}\conf
;Name: \"{app}\sql\MFOPG\"
;Name: {app}\sql\MSSQL
;Name: {app}\sql\Oracle
;Name: {app}\sql\PostgreSQL
;Name: {app}\bin\jdk17
;Name: {app}\bin\network\admin

;[CustomMessages]
;selectInstall64 = \"Select if you installed 64-bit Oracle client. %n (※ Don't select if you installed 32-bit)\";
;launchMsg       = \"Launch Maxgauge Configuration\" ;" >> $ISS_FILE_DIR
}

ISS_FILE_CODE_PART_MFO_TOTAL()
{
echo "

[Icons]
Name: {group}\PlatformJS Start; Filename: {app}\PlatformJS\bin\sc_start.bat; Comment: web service start; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\maxgauge.ico; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Start; Filename: {app}\PlatformJS\bin\sc_start.bat; WorkingDir: {app}\PlatformJS\bin; Comment: web service start; IconFilename: {app}\PlatformJS\bin\maxgauge.ico; Tasks: desktopicon
Name: {group}\PlatformJS Stop; Filename: {app}\PlatformJS\bin\sc_stop.bat; Comment: web service stop; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\maxgauge.ico; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Stop; Filename: {app}\PlatformJS\bin\sc_stop.bat; WorkingDir: {app}\PlatformJS\bin\; Comment: web service stop; IconFilename: {app}\PlatformJS\bin\maxgauge.ico; Tasks: desktopicon
Name: {group}\PlatformJS Restart; Filename: {app}\PlatformJS\bin\sc_restart.bat; Comment: web service restart; WorkingDir: {app}\PlatformJS\bin\; IconFilename: {app}\PlatformJS\bin\maxgauge.ico; Tasks: desktopicon
Name: {userdesktop}\PlatformJS Restart; Filename: {app}\PlatformJS\bin\sc_restart.bat; WorkingDir: {app}\PlatformJS\bin\; Comment: web service restart; IconFilename: {app}\PlatformJS\bin\maxgauge.ico; Tasks: desktopicon


[Run]
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\MAXGAUGE.zip -d {app}; StatusMsg: During decompression... ; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\DataGather.zip -d {app}\DataGather; StatusMsg: During decompression datagather...; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\Database.zip -d {app}\Database; StatusMsg: During decompression Database...; Flags : runhidden
;Filename: {tmp}\UNZIP.EXE; Parameters: {tmp}\PlatformJS.zip -d {app}\PlatformJS; StatusMsg: During decompression PlatformJS...; Flags : runhidden
;Filename: {app}\All_Start.bat; WorkingDir: {app}; StatusMsg: Register service; Flags: runhidden; Tasks:
;Filename: {app}\DGServer_M\bin\DGServer_x86_64.exe; Parameters: /install; WorkingDir: {app}\DGServer_M\bin; StatusMsg: Registration of datagather Master...; Flags: runhidden
;Filename: net; Check: procWaiting( 'Starting service datagather Master', 'start DGServer Master' ); Flags: runhidden
;Filename: {app}\DGServer_S1\bin\DGServer_x86_64.exe; Parameters: /install; WorkingDir: {app}\DGServer_S1\bin; StatusMsg: Registration of datagather Slave...; Flags: runhidden
;Filename: net; Check: procWaiting( 'Starting service datagather Slave', 'start DGServer Slave' ); Flags: runhidden
;Filename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Parameters: '-install'; Description: Launch Platform. JS 64bit; Flags: nowait postinstall skipifsilent unchecked; WorkingDir: {app}\PlatformJS\bin
;Filename: {app}\PlatformJS\bin\PlatformJS_Service32.exe; Parameters: '-install'; Description: Launch Platform. JS 32bit; Flags: nowait postinstall skipifsilent unchecked; WorkingDir: {app}\PlatformJS\bin; Tasks:
;Filename: net; Parameters: {code:GetParams32|{app}}; Description: Run PlatformJS 32bit If the 32bit Oracle; Flags: runhidden nowait postinstall skipifsilent unchecked; WorkingDir: {app}\PlatformJS\bin; Tasks:
;Filename: {app}\PlatformJS\bin\PlatformJS_Service64.exe; Parameters: -install; Description: Launch Platform. JS 64bit; Flags: nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin; Check: IsWin64; Tasks:
;Filename: {app}\PlatformJS\bin\PlatformJS_Service32.exe; Parameters: -install; Description: Launch Platform. JS 32bit; Flags: nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin; Check: not IsWin64
;Filename: C:\Program Files (x86)\Google\Chrome\Application\chrome.exe; Parameters: http://127.0.0.1:8080/Maxgauge/Config; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent

;Filename: net; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent



;Filename: {sys}\sc.exe; Parameters: create DGServer_M  start= auto    binPath= {app}\DGServer_M\bin\DGServer_x86_64_M.exe; Flags: runhidden
;Filename: {sys}\sc.exe; Parameters: create DGServer_S1 start= auto    binPath= {app}\DGServer_S1\bin\DGServer_x86_64_S1.exe; Flags: runhidden
;Filename: {sys}\sc.exe; Parameters: \"create DGServer_OBS_M start= auto binPath= \"\"{app}\DGServer_M\bin\mxg_obsd.exe -f  {app}\DGServer_M\conf\DG\common.conf -i 10 -D -OTHERD\"\"\"; Flags: runhidden
;Filename: {sys}\sc.exe; Parameters: \"create DGServer_OBS_S1 start= demand  binPath= \"\"{app}\DGServer_S1\bin\mxg_obsd.exe -f {app}\DGServer_S1\conf\DG\common.conf -i 10 -D -OTHERD\"\"\"; Flags: runhidden


Filename: {app}\Database\pg94\bin\pg_ctl.exe; Parameters: register -N PostgreSQL -D {app}\Database\data\pg94; WorkingDir: {app}; StatusMsg: {cm:registrationPG}; Flags: runhidden
Filename: net; Check: procWaiting( ExpandConstant('{cm:startServicePG}') , 'start PostgreSQL' ); Flags: runhidden
;Filename: net; Description: {cm:selectInstall64}; Flags: runhidden nowait postinstall skipifsilent; WorkingDir: {app}\PlatformJS\bin
;Filename: {sys}\sc.exe; Parameters: \"config \"\"PostgreSQL\"\" DisplayName= \"\"Exem_PostgreSQL(5432)\"\"\"; Flags: runhidden
Filename: net; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent
;Filename: C:\Program Files (x86)\Google\Chrome\Application\chrome.exe; Parameters: http://127.0.0.1:8080/Maxgauge/Config; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent

[UninstallRun]
Filename: {sys}\sc.exe; Parameters: stop PostgreSQL; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PostgreSQL; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop DGServer_S1; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete DGServer_S1; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop DGServer_OBS_M; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete DGServer_OBS_M; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop DGServer_M; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete DGServer_M; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop DGServer_OBS_S1; WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete DGServer_OBS_S1; WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop PlatformJS_OBS(8080); WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PlatformJS_OBS(8080); WorkingDir: {app}; Flags: runhidden

Filename: {sys}\sc.exe; Parameters: stop PlatformJS(8080); WorkingDir: {app}; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: delete PlatformJS(8080); WorkingDir: {app}; Flags: runhidden

[UninstallDelete]
Type: filesandordirs; Name: {app}


[Code]


var
  lblMasterGather: TLabel;
  edtMasterGather: TEdit;
  lblSlaveGather : TLabel;
  edtSlaveGather : TEdit;
  lblGB1         : TLabel;
  lblGB2         : TLabel;
  Panel1         : TPanel;

function NextButtonClick(CurPageID: Integer): Boolean;
var
  ErrorCode: Integer;
  path : string;
begin
  // always allow move through the wizard pages
  Result := True;

  if (CurPageID = wpFinished) and (WizardForm.RunList.Visible) then
  begin
    //if WizardForm.RunList.Checked[0] then
	//begin
	//	Exec(ExpandConstant('{app}\PlatformJS\bin\PlatformJS_Service64.exe'), '-install', '', SW_SHOW, ewNoWait, ErrorCode );
	//end
	//else
	//begin
	//	Exec(ExpandConstant('{app}\PlatformJS\bin\PlatformJS_Service32.exe'), '-install', '', SW_SHOW, ewNoWait, ErrorCode );
	//end;
	//msgbox( 'start platformJS8080', mbInformation, MB_OK);
	sleep(1000);
	ShellExec('', 'net', 'start platformJS(8081)', '', SW_HIDE, ewNoWait, ErrorCode );

	if WizardForm.RunList.Checked[0] then
	begin
		sleep(1000);
	    ShellExec('open', 'chrome.exe', 'http://127.0.0.1:8080/MAXGAUGE/config', '', SW_HIDE, ewNoWait, ErrorCode );
	end
  end;

end;


procedure CurStepChanged(CurStep: TSetupStep);
var
	ErrorCode: Integer;
	optionDGMStr : string;
	optionDGSStr : string;

	optionOBMStr : string;
	optionOBSStr : string;


    filePathDGM    : string;
    ChangePathDGM  : string;
    filePathDGS    : string;
    ChangePathDGS  : string;

    filePathOBM    : string;
    ChangePathOBM  : string;
    filePathOBS    : string;
    ChangePathOBS : string;

begin


    if (CurStep=ssPostInstall) then
    begin
	    filePathDGM   := ExpandConstant('{app}\DGServer_M');
		ChangePathDGM := filePathDGM;
        StringChange(ChangePathDGM,'\','\\\\');

        filePathDGS   := ExpandConstant('{app}\DGServer_S1');
		ChangePathDGS := filePathDGS;
        StringChange(ChangePathDGS,'\','\\\\');

        filePathOBM   := ExpandConstant('{app}\DGServer_M');
		ChangePathOBM := filePathDGM;
        StringChange(ChangePathOBM,'\','\\\\');

        filePathOBS   := ExpandConstant('{app}\DGServer_S1');
		ChangePathOBS := filePathOBS;
        StringChange(ChangePathOBS,'\','\\\\');

        //MasterDGMemroy := Trunc(FloatToStr(strTofloat(edtMasterGather.Text) * 1024)) + 'm';

        optionDGMStr :=
			'option -Xms'+FloatToStr(strTofloat(edtMasterGather.Text) * 1024)+'m'+#13#10 +
			'option -Xmx'+FloatToStr(strTofloat(edtMasterGather.Text) * 1024)+'m'+#13#10 +
			'option -XX:+UseParNewGC'+ #13#10 +
			'option -XX:+UseConcMarkSweepGC'+ #13#10+
			'option -XX:CMSInitiatingOccupancyFraction=45'+ #13#10 +
			'Stderr NUL'+ #13#10;

		optionDGSStr :=
			'option -Xms'+FloatToStr(strTofloat(edtSlaveGather.Text) * 1024)+'m'+ #13#10 +
			'option -Xmx'+FloatToStr(strTofloat(edtSlaveGather.Text) * 1024)+'m'+ #13#10 +
			'option -XX:+UseParNewGC'+ #13#10+
			'option -XX:+UseConcMarkSweepGC'+ #13#10+
			'option -XX:CMSInitiatingOccupancyFraction=45'+ #13#10 +
			'Stderr NUL'+ #13#10;

		optionOBMStr :=
			'obs1=1'+ #13#10 +
			'obs1_cmd=DGServer_M'+ #13#10 +
			'obs1_keyword=DGServer_M_x86_64'+#13#10 +
			'obs1_keyword2=DGServer_M_x86_64'+#13#10 +
			'obs1_cpu_limit=80'+ #13#10 +
			'obs1_mem_limit='+FloatToStr((strTofloat(edtMasterGather.Text)+1) * 1024 *1024)+ #13#10 +
			'obs1_init_wait=180'+ #13#10 +
			'obs1_activity_time=300'+ #13#10 +
			'obs1_activity_file=dg.act';

		optionOBSStr :=
			'obs1=1'+ #13#10 +
			'obs1_cmd=DGServer_S1'+ #13#10 +
			'obs1_keyword=DGServer_S1_x86_64'+#13#10 +
			'obs1_keyword2=DGServer_S1_x86_64'+#13#10 +
			'obs1_cpu_limit=80'+ #13#10 +
			'obs1_mem_limit='+FloatToStr((strTofloat(edtSlaveGather.Text)+1) * 1024 *1024)+ #13#10 +
			'obs1_init_wait=180'+ #13#10 +
			'obs1_activity_time=300'+ #13#10 +
			'obs1_activity_file=dg.act';

		SaveStringToFile(filePathDGM + '\bin\DGServer_M_x86_64.config', optionDGMStr, False);
        SaveStringToFile(filePathDGM + '\bin\DGServer_M_x86.config', optionDGMStr, False);
        SaveStringToFile(filePathDGS + '\bin\DGServer_S1_x86_64.config', optionDGSStr, False);
	    SaveStringToFile(filePathDGS + '\bin\DGServer_S1_x86.config', optionDGSStr, False);
	    SaveStringToFile(filePathOBM + '\conf\DG\common.conf', optionOBMStr, False);
	    SaveStringToFile(filePathOBS + '\conf\DG\common.conf', optionOBSStr, False);

        Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('config \"PostgreSQL\" DisplayName= \"Exem_PostgreSQL(5432)\"'), '', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
	    sleep(500);
		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"DGServer_M\"  DisplayName= \"Exem_DGServer_M\" start= auto   binPath= \"{app}\DGServer_M\bin\DGServer_M_x86_64.exe\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
		sleep(500);
		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"DGServer_S1\" DisplayName= \"Exem_DGServer_S1\" start= auto   binPath= \"{app}\DGServer_S1\bin\DGServer_S1_x86_64.exe'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
		sleep(500);
		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"DGServer_OBS_M\" DisplayName= \"Exem_DGServer_OBS_M\" start= auto binPath= \"{app}\DGServer_M\bin\mxg_obsd.exe -f  {app}\DGServer_M\conf\DG\common.conf -i 10 -D -OTHERD\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
		sleep(500);
		Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"DGServer_OBS_S1\" DisplayName= \"Exem_DGServer_OBS_S1\" start= auto  binPath= \"{app}\DGServer_S1\bin\mxg_obsd.exe -f {app}\DGServer_S1\conf\DG\common.conf -i 10 -D -OTHERD\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
		//sleep(500);
		//Exec( ExpandConstant('{sys}\sc.exe'), ExpandConstant('create \"PlatformJS_OBS(8080)\" DisplayName= \"Exem_PlatformJS_OBS(8080)\" start= auto  binPath= \"{app}\PlatformJS\config\mxg_obsd.exe -f {app}\PlatformJS\config\common.service.conf -i  10 -D -OTHERD\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );

		sleep(500);
		Exec( ExpandConstant('{app}\PlatformJS\service_install.bat'),'','', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );

		sleep(500);
		Exec( ExpandConstant('{app}\PlatformJS\mxg_obsd_service_install.bat'),'','', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );




    end;


	if (CurStep=ssDone) then
	begin
	    sleep(500);
		ShellExec('', 'net', 'start DGServer_OBS_M', '', SW_HIDE, ewNoWait, ErrorCode );
		sleep(500);
		ShellExec('', 'net', 'start DGServer_OBS_S1', '', SW_HIDE, ewNoWait, ErrorCode );
		sleep(500);
		ShellExec('', 'net', 'start DGServer_M', '', SW_HIDE, ewNoWait, ErrorCode );
		sleep(500);
		ShellExec('', 'net', 'start DGServer_S1', '', SW_HIDE, ewNoWait, ErrorCode );

		sleep(500);
		ShellExec('', 'net', 'start PlatformJS_OBS(8080)', '', SW_HIDE, ewNoWait, ErrorCode );

	end;
end;


function procWaiting( title : string; command : string ) : boolean;
var
  ix : integer;
  resultCode : integer;
begin
  result := true;
  WizardForm.StatusLabel.Caption := title;

  Exec( 'net', command, '', SW_HIDE, ewNoWait, resultCode );

  for ix := 1 to 20 do
  begin
    if ( ix mod 6 ) = 0 then
      WizardForm.StatusLabel.Caption := title;

    WizardForm.StatusLabel.Caption := WizardForm.StatusLabel.Caption + '.'
    sleep(150);
  end;
end;

procedure SampleForm_Activate(Page: TWizardPage);
begin
  // enter code here...
end;


function SampleForm_ShouldSkipPage(Page: TWizardPage): Boolean;
begin
  Result := False;
end;


function SampleForm_BackButtonClick(Page: TWizardPage): Boolean;
begin
  Result := True;
end;


procedure SampleForm_CancelButtonClick(Page: TWizardPage; var Cancel, Confirm: Boolean);
begin
  // enter code here...
end;

function SampleForm_NextButtonClick(Page: TWizardPage): Boolean;
begin
    try
		StrToFloat(edtMasterGather.Text);
    except
		msgbox( ExpandConstant('{cm:InputNumberErrMsg}'), mbInformation, MB_OK);
		edtMasterGather.clear();
		edtMasterGather.Focused();
		result := false;
		exit;
    end;


   try
		StrToFloat(edtSlaveGather.Text);
   except
		msgbox( ExpandConstant('{cm:InputNumberErrMsg}'), mbInformation, MB_OK);
		edtSlaveGather.clear();
		edtSlaveGather.Focused();
		result := false;
		exit;
   end;
   result := true;
end;

//function SampleForm_NextButtonClick(Page: TWizardPage): Boolean;
//begin
  // result := true;
//end;

//procedure onkeyDown(Sender: TObject; var Key: Char) ;
//begin

  //msgbox( Key, mbInformation, MB_OK);
	//#8,#9,#32,#3,#22,
  //if (Key in ['0'..'9'] ) then
  //begin

  //end ;

//end;




function DatabaseInfoForm_CreatePage(PreviousPageId: Integer): Integer;
var
  Page: TWizardPage;
begin
  Page := CreateCustomPage(
    PreviousPageId,
    ExpandConstant('{cm:DatabaseInfoForm_Caption}'),
    'Input Gather memory Information'
  );

  { Panel1 }
  Panel1 := TPanel.Create(Page);
  with Panel1 do
  begin
    Parent      := Page.Surface;
    Left        := ScaleX(8);
    Top         := ScaleY(2);
    Width       := ScaleX(393);
    Height 	    := ScaleY(233);
    BevelInner  := bvNone;
    BevelWidth  := ScaleX(1);
    BorderStyle := bsSingle;
    TabOrder    := 0;
  end;

{ Label1 }
  lblMasterGather := TLabel.Create(Page);
  with lblMasterGather do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(10);
    Width   := ScaleX(92);
    Height  := ScaleY(13);

    Caption := 'Master Gather';
  end;

  edtMasterGather := TEdit.Create(Page);
  with edtMasterGather do
  begin
    Parent := Panel1;
    Left   := ScaleX(95);
    Top    := ScaleY(8);
    Width  := ScaleX(100);
    Height := ScaleY(13);
    Text    := '1';
  end;

  lblGB1 := TLabel.Create(Page);
  with lblGB1 do
  begin
    Parent  := Panel1;
    Left    := ScaleX(200);
    Top    := ScaleY(11);
    Width   := ScaleX(50);
    Height  := ScaleY(13);
    Caption := 'GB';
  end;

  lblSlaveGather := TLabel.Create(Page);
  with lblSlaveGather do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(30) + edtMasterGather.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := 'Slave Gather';
  end;

  edtSlaveGather := TEdit.Create(Page);
  with edtSlaveGather do
  begin
    Parent := Panel1;
    Left   := ScaleX(95);
    Top    := ScaleY(39);
    Width  := ScaleX(100);
    Height := ScaleY(13);
    Text   := '3';
  end;

  lblGB2 := TLabel.Create(Page);
  with lblGB2 do
  begin
    Parent  := Panel1;
    Left    := ScaleX(200);
    Top    := ScaleY(42);
    Width   := ScaleX(50);
    Height  := ScaleY(13);
    Caption := 'GB';
  end;



  with Page do
  begin
    OnActivate := @SampleForm_Activate;
    OnShouldSkipPage := @SampleForm_ShouldSkipPage;
    OnBackButtonClick := @SampleForm_BackButtonClick;
    OnNextButtonClick := @SampleForm_NextButtonClick;
    OnCancelButtonClick := @SampleForm_CancelButtonClick;
  end;


  Result := Page.ID;
end;



procedure InitializeWizard();
begin
  // Common
  DatabaseInfoForm_CreatePage(wpSelectTasks);
end;

[Files]
Source: C:\Multi-Runner\mfodg\deploy\MFO\tar\DGServer_M\*; DestDir: {app}\DGServer_M\; Flags:\"recursesubdirs\";
Source: C:\Multi-Runner\mfodg\deploy\MFO\tar\DGServer_S1\*; DestDir: {app}\DGServer_S1\; Flags:\"recursesubdirs\";
Source: C:\Multi-Runner\mfonp\deploy\MFO\PlatformJS\*; DestDir: {app}\PlatformJS\; Flags:\"recursesubdirs\";
Source: C:\Multi-Runner\mfodg\deploy\MFO\tar\XmPing\*; DestDir: {app}\XmPing\; Flags:\"recursesubdirs\";
Source: C:\Multi-Runner\mfodg\deploy\MFO\tar\PG_Backup\*; DestDir: {app}\PG_Backup\; Flags:\"recursesubdirs\";
Source: C:\Database\*; DestDir: {app}\Database\; Flags:\"recursesubdirs\"; " >> $ISS_FILE_DIR
}

ISS_FILE_CODE_PART_ONLY_PJS()
{
echo "

[Icons]
Name: {group}\\PlatformJS Start; Filename: {app}\\PlatformJS\\bin\\sc_start.bat; Comment: web service start; WorkingDir: {app}\\PlatformJS\\bin\\; IconFilename: {app}\\PlatformJS\\bin\\maxgauge.ico; Tasks: desktopicon
Name: {userdesktop}\\PlatformJS Start; Filename: {app}\\PlatformJS\\bin\\sc_start.bat; WorkingDir: {app}\\PlatformJS\\bin; Comment: web service start; IconFilename: {app}\\\\PlatformJS\\bin\\maxgauge.ico; Tasks: desktopicon
Name: {group}\\PlatformJS Stop; Filename: {app}\\PlatformJS\\bin\\sc_stop.bat; Comment: web service stop; WorkingDir: {app}\\PlatformJS\\bin\\; IconFilename: {app}\\PlatformJS\\bin\\maxgauge.ico; Tasks: desktopicon
Name: {userdesktop}\\PlatformJS Stop; Filename: {app}\\PlatformJS\\bin\\sc_stop.bat; WorkingDir: {app}\\PlatformJS\\bin\\; Comment: web service stop; IconFilename: {app}\\PlatformJS\\bin\\maxgauge.ico; Tasks: desktopicon
Name: {group}\\PlatformJS Restart; Filename: {app}\\PlatformJS\\bin\\sc_restart.bat; Comment: web service restart; WorkingDir: {app}\\PlatformJS\\bin\\; IconFilename: {app}\\PlatformJS\\bin\\maxgauge.ico; Tasks: desktopicon
Name: {userdesktop}\\PlatformJS Restart; Filename: {app}\\PlatformJS\\bin\\sc_restart.bat; WorkingDir: {app}\\PlatformJS\\bin\\; Comment: web service restart; IconFilename: {app}\\PlatformJS\\bin\\maxgauge.ico; Tasks: desktopicon

[Run]
Filename: net; Description: {cm:launchMsg}; Flags: nowait postinstall skipifsilent

[UninstallRun]
Filename: {sys}\\sc.exe; Parameters: stop PlatformJS_OBS(8080); WorkingDir: {app}; Flags: runhidden
Filename: {sys}\\sc.exe; Parameters: delete PlatformJS_OBS(8080); WorkingDir: {app}; Flags: runhidden
Filename: {sys}\\sc.exe; Parameters: stop PlatformJS(8080); WorkingDir: {app}; Flags: runhidden
Filename: {sys}\\sc.exe; Parameters: delete PlatformJS(8080); WorkingDir: {app}; Flags: runhidden

[UninstallDelete]
Type: filesandordirs; Name: {app}

[Code]
var
  lblDatabaseName: TLabel;
  edtDatabaseName: TEdit;
  lblDatabaseType: TLabel;
  edtDatabaseType: TEdit;
  lblDatabaseSvr : TLabel;
  edtDatabaseSvr : TEdit;
  lblDatabaseDB  : TLabel;
  edtDatabaseDB  : TEdit;
  lblDatabaseUser: TLabel;
  edtDatabaseUser: TEdit;
  lblDatabasepwd : TLabel;
  edtDatabasepwd : TEdit;
  lblDatabasePort: TLabel;
  edtDatabasePort: TEdit;
  lblDescription : TLabel;
  edtDescription : TEdit;
  lblgatherip    : TLabel;
  edtgatherip    : TEdit;
  lblgatherport  : TLabel;
  edtgatherport  : TEdit;

  cbType         : TCombobox;

  serverType     : String;
  sqlPath        : String;

  javaHomePath: String;
  jdkVersion  : String;


  Button1: TButton;

  Panel1: TPanel;

  // config.json 생성시 user/pwd 암호화 관련
  function xmEncryptc( source : pAnsichar ) : pAnsichar;
  external 'xmEncryptc@files:excrypt32.dll stdcall' ;

  // TEdit에서 focus 사용 하기 위함.
  function SetFocus(hWnd: HWND): HWND;
  external 'SetFocus@user32.dll stdcall';



function NextButtonClick(CurPageID: Integer): Boolean;
var
  ErrorCode: Integer;
  path : string;
begin
  // always allow move through the wizard pages
   //MsgBox( inttostr( ord( CurStep )), mbError, MB_OK);
  Result := True;

  if (CurPageID = wpFinished) and (WizardForm.RunList.Visible) then
  begin

    //sleep(1000);
	//ShellExec('', 'net', 'start platformJS(8080)', '', SW_HIDE, ewNoWait, ErrorCode );

	if WizardForm.RunList.Checked[0] then
	begin
		sleep(1000);
	    ShellExec('open', 'chrome.exe', 'http://127.0.0.1:8080/MAXGAUGE/config', '', SW_HIDE, ewNoWait, ErrorCode );
	end
  end;
end;



procedure CurStepChanged(CurStep:TSetupStep);
var
	ErrorCode: Integer;
begin

    if (CurStep=ssPostInstall) then
    begin

		//Exec( ExpandConstant('{sys}\\\\sc.exe'), ExpandConstant('create /\"PlatformJS_OBS/\" start= auto  binPath= /\"{app}\\\\PlatformJS\\\\bin\\\\mxg_obsd.exe -f {app}\\\\PlatformJS\\\\conf\\\\common.conf -i  10 -D -OTHERD/\"'),'', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );




    end
    if (CurStep=ssDone) then
	begin




		sleep(1000);
	 	ShellExec('', 'net', 'start PlatformJS_OBS(8080)', '', SW_HIDE, ewNoWait, ErrorCode );

	 	//sleep(500);
		//Exec( ExpandConstant('{app}\\\\PlatformJS\\\\mxg_obsd_service_install.bat'),'','', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );
	 	//sleep(500);
		//Exec( ExpandConstant('{app}\\\\PlatformJS\\\\service_install.bat'),'','', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );


	end


end;



{ DatabaseInfo_Activate }

procedure SampleForm_Activate(Page: TWizardPage);
begin
  // enter code here...
end;

{ SampleForm_ShouldSkipPage }

function SampleForm_ShouldSkipPage(Page: TWizardPage): Boolean;
begin
  Result := False;
end;

{ SampleForm_BackButtonClick }

function SampleForm_BackButtonClick(Page: TWizardPage): Boolean;
begin
  Result := True;
end;


{ SampleForm_CancelButtonClick }

procedure SampleForm_CancelButtonClick(Page: TWizardPage; var Cancel, Confirm: Boolean);
begin
  // enter code here...
end;

procedure MaxgaugeFileWrite( sender : TObject );
var
  jsonString : string;
  appPath    : string;
  ChangePath : string;
  dbUserStr  : string;
  dbPwdStr   : string;
  ErrorCode: Integer;
begin
  appPath := ExpandConstant('{app}\\PlatformJS');
  ChangePath := appPath;
  StringChange(ChangePath,'\\','\\\\');
  dbUserStr := string( xmEncryptc(+edtDatabaseUser.Text ) );
  dbPwdStr := string( xmEncryptc(+edtDatabasepwd.Text ) );

  jsonString :=
	'{' + #13#10+
    '\"service_port\": 8080,' + #13#10+
    '\"database_default\": \"'+edtDatabaseName.text+'\",' + #13#10+
    '\"datagather_default\": \"'+edtDatabaseName.text+'\",' + #13#10+
    '\"database_pool_max\": 300,' + #13#10+
    '\"database_pool_min\": 30,' + #13#10+
    '\"database_maxrows\": 2000000,' + #13#10+
    '\"second_charset\": \"CP949\",' + #13#10+
    '\"pjs_loadbalancer_master\": false,'+ #13#10+
        '\"url_repo_type_service\": false,' + #13#10+
	'\"maxgauge_option\":' + #13#10+
    '{'+ #13#10+
        '\"refresh_time\": 3,' + #13#10+
        '\"execute_exa\": false,'+ #13#10+
        '\"version\": \"5.3.1\"'+ #13#10+
    '},'+ #13#10+
    '\"datagathers\": ['+ #13#10+
        '{'+ #13#10+
           '\"datagather_name\": \"'+edtDatabaseName.text+'\",' + #13#10+
           '\"datagather_ip\": \"'+edtgatherip.text+'\",' + #13#10+
           '\"datagather_port\": \"'+edtgatherport.text+'\",' + #13#10+
           '\"desc\": \" \"' + #13#10+
        '}'+ #13#10+
    '],'+ #13#10+
    '\"databases\": ['+ #13#10+
        '{'+ #13#10+
            '\"database_name\":\"'+edtDatabaseName.text+'\",' + #13#10+
            '\"database_type\": \"'+cbType.text+'\",' + #13#10+
            '\"database_server\": \"'+edtDatabaseSvr.text+'\",' + #13#10+
            '\"database_port\": \"'+edtDatabasePort.text+'\",' + #13#10+
            '\"database_database\": \"'+edtDatabaseDB.text+'\",' + #13#10+
            '\"database_user\": \"'+dbUserStr+'\",' + #13#10+
            '\"database_password\": \"'+dbPwdStr+'\",' + #13#10+
            '\"sql_directory\": \"'+sqlPath+'\",' + #13#10+
            '\"database_description\": \"'+edtDescription.text+'\"' + #13#10+
        '}' + #13#10+
    '],' + #13#10+
    '\"log_level\": \"info\",' + #13#10+
    '\"log_max_history\": 90,' + #13#10+
    '\"log_max_file_size\": \"30MB\",' + #13#10+
    '\"log_directory\": \"./log\"' + #13#10+
	'}';

    SaveStringToFile(appPath + '\\config\\config.json', jsonString, False);

   	sleep(1000);
	Exec( ExpandConstant('{app}\\PlatformJS\\mxg_obsd_service_install.bat'),'','', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );

	sleep(1000);
	Exec( ExpandConstant('{app}\\PlatformJS\\service_install.bat'),'','', SW_HIDE,  ewWaitUntilTerminated, ErrorCode );

end;

// 입력이 비어있는지 체크.
function emptyFieldCheck (Sender : TObject) : Boolean;

begin
   Result := True;
   if TEdit( Sender ).text = '' then
    begin
       SetFocus( TEdit( Sender ).Handle );
	   Result := False;
    end;
end;




{ SampleForm_NextkButtonClick }
function SampleForm_NextButtonClick(Page: TWizardPage): Boolean;
var tempMsg : String;
begin
  if not emptyFieldCheck(edtDatabaseName) then
  begin
    msgbox( ExpandConstant('{cm:emptyMsg_DataBaseName}'), mbInformation, MB_OK);
    Result := False;
  end

  else if cbType.text = '' then
  begin
    SetFocus(TCombobox( cbType).Handle )
    msgbox( ExpandConstant('{cm:emptyMsg_SelectType }'), mbInformation, MB_OK);
    Result := False;
  end


  else if not emptyFieldCheck(edtDatabaseDB) then
   begin
    if(lblDatabaseDB.Caption = ExpandConstant('{cm:DatabaseInfoForm_Database}')) then
    begin
		tempMsg := ExpandConstant('{cm:emptyMsg_Database}');
    end
    else
	begin
		tempMsg := ExpandConstant('{cm:emptyMsg_TnsName}');
	end;

    msgbox( tempMsg, mbInformation, MB_OK);
    Result := False;
  end

  else if not emptyFieldCheck(edtDatabaseSvr) then
  begin
    msgbox( ExpandConstant('{cm:emptyMsg_ServerIP}'), mbInformation, MB_OK);
    Result := False;
  end

  else if not emptyFieldCheck(edtDatabaseUser) then
  begin
    msgbox( ExpandConstant('{cm:emptyMsg_User}'), mbInformation, MB_OK);
    Result := False;
  end

  else if not emptyFieldCheck(edtDatabasepwd) then
  begin
    msgbox( ExpandConstant('{cm:emptyMsg_Pwd}'), mbInformation, MB_OK);
    Result := False;
  end

  else if not emptyFieldCheck(edtDatabasePort) then
  begin
    msgbox( ExpandConstant('{cm:emptyMsg_Port}'), mbInformation, MB_OK);
    Result := False;
  end

  else if not emptyFieldCheck(edtgatherip) then
  begin
    msgbox( ExpandConstant('{cm:emptyMsg_GatherIp}'), mbInformation, MB_OK);
    Result := False;
  end

  else if not emptyFieldCheck(edtgatherport) then
  begin
    msgbox( ExpandConstant('{cm:emptyMsg_GatherPort}'), mbInformation, MB_OK);
    Result := False;
  end


  else
  begin
    //Wizardform.NextButton.Enabled := True;
	MaxgaugeFileWrite( nil );
	Result := True;
  end

end;

procedure ChangeServerType( Sender : TObject );
begin
  serverType := TCombobox( Sender ).text;

  sqlPath:= '/../sql/MFO_Oracle';
  edtDatabasePort.text := '1521';
  lblDatabaseDB.Caption := ExpandConstant('{cm:DatabaseInfoForm_TnsName}');;
  edtDatabaseUser.text := 'maxgauge';
  edtDescription.text  := 'Oracle';

  if serverType = 'postgresql' then
  begin
    sqlPath:= '/../sql/MFO_PostgreSQL';
    edtDatabasePort.text := '5432';
    lblDatabaseDB.Caption := ExpandConstant('{cm:DatabaseInfoForm_Database}');
    edtDatabaseUser.text := 'postgres';
    edtDescription.text  := 'Postgresql';
  end;
end;



{ DatabaseInfoForm_CreatePage }

function DatabaseInfoForm_CreatePage(PreviousPageId: Integer): Integer;
var
  Page: TWizardPage;
begin
  Page := CreateCustomPage(
    PreviousPageId,
    ExpandConstant('{cm:DatabaseInfoForm_Caption}'),
    ExpandConstant('{cm:DatabaseInfoForm_Description}')
  );

  { Panel1 }
  Panel1 := TPanel.Create(Page);
  with Panel1 do
  begin
    Parent      := Page.Surface;
    Left        := ScaleX(8);
    Top         := ScaleY(2);
    Width       := ScaleX(393);
    Height 	    := ScaleY(233);
    BevelInner  := bvNone;
    BevelWidth  := ScaleX(1);
    BorderStyle := bsSingle;
    TabOrder    := 0;
  end;

{ Label1 }
  lblDatabaseName := TLabel.Create(Page);
  with lblDatabaseName do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(10);
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseName}');
  end;

  edtDatabaseName := TEdit.Create(Page);
  with edtDatabaseName do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(8);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text    := 'maxgauge';
  end;

  lblDatabaseType := TLabel.Create(Page);
  with lblDatabaseType do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(20) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseType}');
  end;

  sqlPath:= '/../sql/MFO_PostgreSQL';

  cbType    := TCombobox.Create(Page);
  with cbType do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(29);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    DropDownCount := 2;
    //Items.add( 'mssql' );
    Items.add( 'oracle' );
    Items.add( 'postgresql' );
    onChange := @ChangeServerType;
    Text     := 'postgresql';
  end;

{
  edtDatabaseType := TEdit.Create(Page);
  with edtDatabaseType do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(29);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := 'postgresql';
    readonly:= true;
  end;
}
  lblDatabaseSvr := TLabel.Create(Page);
  with lblDatabaseSvr do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(39) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseServer}');
   end;

  edtDatabaseSvr := TEdit.Create(Page);
  with edtDatabaseSvr do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(49);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '127.0.0.1';
  end;
//----------------------------------------------------------------------------------
  lblDatabaseDB := TLabel.Create(Page);
  with lblDatabaseDB do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(59) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_Database}');
  end;

  edtDatabaseDB := TEdit.Create(Page);
  with edtDatabaseDB do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(69);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := 'MFO';
  end;

  //----------------------------------------------------------------------------------
  lblDatabaseUser := TLabel.Create(Page);
  with lblDatabaseUser do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(79) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseUser}');
  end;

  edtDatabaseUser := TEdit.Create(Page);
  with edtDatabaseUser do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(89);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := 'postgres';
  end;

    //----------------------------------------------------------------------------------
  lblDatabasepwd := TLabel.Create(Page);
  with lblDatabasepwd do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(99) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabasePwd}');
  end;

  edtDatabasepwd := TEdit.Create(Page);
  with edtDatabasepwd do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(109);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    PasswordChar := '*';
  end;

  //----------------------------------------------------------------------------------
  lblDescription := TLabel.Create(Page);
  with lblDescription do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(119) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_DatabaseDescription}');
  end;

  edtDescription := TEdit.Create(Page);
  with edtDescription do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(129);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := 'Postgres';
  end;

  //----------------------------------------------------------------------------------
  lblDatabasePort := TLabel.Create(Page);
  with lblDatabasePort do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(139) + edtDatabaseName.height;
    Width   := ScaleX(92);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_port}');
//    visible := false;
  end;

  edtDatabasePort := TEdit.Create(Page);
  with edtDatabasePort do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(149);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    //visible := false;
    Text    := '5432';
  end;


  // Gather Info
  lblgatherip    := TLabel.Create( page );
  with lblgatherip do
  begin
    Parent := Panel1;
    Left   := ScaleX(16);
    Top    := ScaleY(169) + edtDatabaseName.height;
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_GatherIP}');
  end;

  edtgatherip    := TEdit.Create( page );
  with edtgatherip do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(179);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '127.0.0.1';
  end;

  lblgatherport  := TLabel.Create( page );
  with lblgatherport do
  begin
    Parent  := Panel1;
    Left    := ScaleX(16);
    Top     := ScaleY(189) + edtDatabaseName.height;
    Width   := ScaleX(200);
    Height  := ScaleY(13);
    Caption := ExpandConstant('{cm:DatabaseInfoForm_GatherPort}');
  end;

  edtgatherport  := TEdit.Create( page );
  with edtgatherport do
  begin
    Parent := Panel1;
    Left   := ScaleX(100);
    Top    := ScaleY(199);
    Width  := ScaleX(200);
    Height := ScaleY(13);
    Text   := '7000';
  end;

  { Button1 }
  {Button1 := TButton.Create(Page);
  with Button1 do
  begin
    Parent   := Panel1;
    Left     := ScaleX(100);
    Top      := ScaleY(169);
    Width    := ScaleX(75);
    Height   := ScaleY(23);
    Caption  := ExpandConstant('{cm:DatabaseInfoForm_FileWrite');
    TabOrder := 0;
    onClick  := @Filewrite;
  end;
 }
  with Page do
  begin
    OnActivate := @SampleForm_Activate;
    OnShouldSkipPage := @SampleForm_ShouldSkipPage;
    OnBackButtonClick := @SampleForm_BackButtonClick;
    OnNextButtonClick := @SampleForm_NextButtonClick;
    OnCancelButtonClick := @SampleForm_CancelButtonClick;
  end;

  Result := Page.ID;
end;

{ DatabaseInfoForm_InitializeWizard }

//procedure CurStepChanged(CurStep:TSetupStep);
//begin
  //MsgBox( inttostr( ord( CurStep )), mbError, MB_OK);
//end;


// 크롬 설치 체크 2015-10-03 추가
const ChromeAppRegKey = 'Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\chrome.exe';
const ChromeAppVersionRegKey = 'Software\\Google\\Chrome\\BLBeacon';


function checkChromeVersion: Boolean;
var Name : String;
var Version : Integer;
begin
  Result := false;
  RegQueryStringValue(HKEY_CURRENT_USER, ChromeAppVersionRegKey, 'version', Name);
  Name := Copy(Name, 1, 2)

  Version:= strToInt(Name);
  if Version > 42 then
     Result := true;

end;

function checkJDk(): Boolean;
var
	ErrorCode: Integer;
	JavaInstalled : Boolean;
	ResultMsg : Boolean;
	Versions: TArrayOfString;
	I: Integer;
	regRoot: Integer;
begin
    // Check which view of registry should be taken:
	regRoot := HKLM ;
	if IsWin64 then
	begin
		regRoot := HKLM64
	end;


	if (RegGetSubkeyNames(regRoot, 'SOFTWARE\\JavaSoft\\Java Runtime Environment', Versions)) or (RegGetSubkeyNames(regRoot, 'SOFTWARE\\JavaSoft\\Java Development Kit', Versions)) then
	begin
		RegQueryStringValue(regRoot, 'SOFTWARE\\JavaSoft\\Java Development Kit', 'CurrentVersion', jdkVersion);

		for I := 0 to GetArrayLength(Versions)-1 do
			if JavaInstalled = true then
			begin
			//do nothing
			end
			else
			begin
				// 1.8 이상인지 체크
				if ( Versions[I][2]='.' ) and ( ( StrToInt(Versions[I][1]) > 1 ) or ( ( StrToInt(Versions[I][1]) = 1 ) and ( StrToInt(Versions[I][3]) >= 8 ) ) ) then
				begin
					JavaInstalled := true;
			end
			else
			begin
				JavaInstalled := false;
			end;
		end;
	end else
	begin
		JavaInstalled := false;
	end;

	if JavaInstalled then
	begin
		Result := true;
	end
end;



function GetJavaPath(Default: String): String;
var
    javaHome: String;
    path: String;
    regRoot: Integer;
begin
    path := '';
	Result := '' ;

	regRoot := HKLM
	if IsWin64 then
	begin
		regRoot := HKLM64
	end;

    // try to find JDK \"javaw.exe\"
    if (Length(path) = 0) and (Length(jdkVersion) > 0) and ((jdkVersion) >= '1.8.0') then begin
        RegQueryStringValue(regRoot, 'SOFTWARE\\JavaSoft\\Java Development Kit\\' + jdkVersion, 'JavaHome', javaHome);
        path := javaHome + '\\jre\\bin\\' + 'javaw.exe';
        if FileExists(path) then begin
            Log('(JDK) found javaw.exe: ' + path);
            Result := javaHome + '\\jre';
        end;
    end
    else
    begin
		Result := '' ;
    end ;
    javaHomePath := Result; // save found value as global

end;


// 설치 페이지가 보여지기 전에 실행됨. 팝업은 보이고 설치는 계속
function InitializeSetup(): Boolean;

var
   msgStr  : string;
   count   : Integer;
   javaPath: String;
begin

	Result := true;
	msgStr := '';



    //// 크롬 설치 체크 , 크롬 버전 체크
    ////if  not IsChromeInstalled or not checkChromeVersion then
    //if   not checkChromeVersion then
    //begin
	//	count  := count+1;
	//	msgStr := msgStr + IntToStr(count)+'. '+  ExpandConstant('{cm:chromeNotInstalledMsg}') + #13#10;
	//	Result := false;
    //end;

    //// JDK 설치 체크
    //if  not checkJDk then
	//begin
	//    count  := count+1;
	//    msgStr := msgStr + IntToStr(count)+'. '+ ExpandConstant('{cm:JDKNotIstalledMsg1}') + #13#10 +  ExpandConstant('{cm:JDKNotIstalledMsg2}')+ #13#10;
	//    Result := false;
	//end;

	//// JAVA_HOME 체크
	//javaPath := GetEnv('JAVA_HOME') ;
	////javaPath := GetJavaPath('');
	//if javaPath = '' then begin
    //    count  := count+1;
	//    msgStr := msgStr + IntToStr(count)+'. ' +  ExpandConstant('{cm:JVHOMENotIstalledMsg}')
    //    Result := false;
    //end ;

    //if Result = false then
	//begin
	//   // 결과가 false 더라도 popup만 표시해주고 인스톨은 진행. result 는 true
	//	msgbox( msgStr, mbInformation, MB_OK);
	//	Result := true;
	//end ;


end;


procedure InitializeWizard();
begin
  // Common
  DatabaseInfoForm_CreatePage(wpInstalling);
end;

[Files]
Source: C:\Multi-Runner\mfonp\deploy\MFO\PlatformJS\*; DestDir: {app}\PlatformJS\; Flags:\"recursesubdirs\";	" >> $ISS_FILE_DIR
}

REQUIRER_CHECK
ISS_FILE_MAKER
